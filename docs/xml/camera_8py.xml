<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="camera_8py" kind="file">
    <compoundname>camera.py</compoundname>
    <innerclass refid="classpanoptes_1_1camera_1_1camera_1_1_abstract_camera" prot="public">panoptes::camera::camera::AbstractCamera</innerclass>
    <innernamespace refid="namespacepanoptes_1_1camera_1_1camera">panoptes::camera::camera</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1" refid="namespacepanoptes_1_1camera_1_1camera" refkind="compound"><highlight class="keyword">import</highlight><highlight class="normal"><sp/>os</highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>sys</highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>re</highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>time</highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>datetime</highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>subprocess</highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/><ref refid="namespacepanoptes_1_1utils_1_1logger" kindref="compound">panoptes.utils.logger</ref><sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>logger</highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/><ref refid="namespacepanoptes_1_1utils_1_1config" kindref="compound">panoptes.utils.config</ref><sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>config</highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal">@logger.has_logger</highlight></codeline>
<codeline lineno="12"><highlight class="normal">@config.has_config</highlight></codeline>
<codeline lineno="13" refid="classpanoptes_1_1camera_1_1camera_1_1_abstract_camera" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classpanoptes_1_1camera_1_1camera_1_1_abstract_camera" kindref="compound">AbstractCamera</ref>(object):</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="15"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Abstract<sp/>Camera<sp/>class</highlight></codeline>
<codeline lineno="16"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classpanoptes_1_1camera_1_1camera_1_1_abstract_camera_1afcf8cea3ad371785e5e0a313a2805f53" kindref="member">__init__</ref>(self,<sp/>config=dict(),<sp/>USB_port=</highlight><highlight class="stringliteral">&apos;usb:001,017&apos;</highlight><highlight class="normal">):</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="20"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Initialize<sp/>the<sp/>camera</highlight></codeline>
<codeline lineno="21"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Create<sp/>an<sp/>object<sp/>for<sp/>just<sp/>the<sp/>mount<sp/>config<sp/>items</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classpanoptes_1_1camera_1_1camera_1_1_abstract_camera_1a3e0a3be061adeafad983a3e401524b31" kindref="member">camera_config</ref><sp/>=<sp/>config<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>len(config)<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>dict()</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Get<sp/>the<sp/>model<sp/>and<sp/>port<sp/>number</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>model<sp/>=<sp/>self.camera_config.get(</highlight><highlight class="stringliteral">&apos;model&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>port<sp/>=<sp/>self.camera_config.get(</highlight><highlight class="stringliteral">&apos;port&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Check<sp/>the<sp/>config<sp/>for<sp/>required<sp/>items</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">assert</highlight><highlight class="normal"><sp/>self.camera_config.get(</highlight><highlight class="stringliteral">&apos;port&apos;</highlight><highlight class="normal">)<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">,<sp/>self.logger.error(</highlight><highlight class="stringliteral">&apos;No<sp/>mount<sp/>port<sp/>specified,<sp/>cannot<sp/>create<sp/>mount\n<sp/>{}&apos;</highlight><highlight class="normal">.format(self.<ref refid="classpanoptes_1_1camera_1_1camera_1_1_abstract_camera_1a3e0a3be061adeafad983a3e401524b31" kindref="member">camera_config</ref>))</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.logger.info(</highlight><highlight class="stringliteral">&apos;Creating<sp/>camera:<sp/>{}<sp/>{}&apos;</highlight><highlight class="normal">.format(model,<sp/>port))</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classpanoptes_1_1camera_1_1camera_1_1_abstract_camera_1a28ddf5d20ac7c199954add8129a6eab4" kindref="member">cooled</ref><sp/>=<sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classpanoptes_1_1camera_1_1camera_1_1_abstract_camera_1a70c3b258f645d6e0a91f618686887c38" kindref="member">cooling</ref><sp/>=<sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classpanoptes_1_1camera_1_1camera_1_1_abstract_camera_1a0db8d53f8b55ccc56dd42317ac0820bd" kindref="member">model</ref><sp/>=<sp/>model</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classpanoptes_1_1camera_1_1camera_1_1_abstract_camera_1aac981bfe591eba6efc5a69b594fae6a0" kindref="member">USB_port</ref><sp/>=<sp/>port</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classpanoptes_1_1camera_1_1camera_1_1_abstract_camera_1a566ba6cf6ebcdf2ce53a18dc3f349c94" kindref="member">name</ref><sp/>=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classpanoptes_1_1camera_1_1camera_1_1_abstract_camera_1a89a5825fa03270a1ea10db22a361362d" kindref="member">properties</ref><sp/>=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classpanoptes_1_1camera_1_1camera_1_1_abstract_camera_1a0341610f703c04f775a3c7344248ecb3" kindref="member">list_config</ref>(self):</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;&apos;&apos;</highlight></codeline>
<codeline lineno="44"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&apos;&apos;&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.logger.debug(</highlight><highlight class="stringliteral">&apos;Get<sp/>All<sp/>Properties&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>command<sp/>=<sp/>[</highlight><highlight class="stringliteral">&apos;gphoto2&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;--port&apos;</highlight><highlight class="normal">,<sp/>self.<ref refid="classpanoptes_1_1camera_1_1camera_1_1_abstract_camera_1aac981bfe591eba6efc5a69b594fae6a0" kindref="member">USB_port</ref>,<sp/></highlight><highlight class="stringliteral">&apos;--list-config&apos;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>subprocess.check_output(command)</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classpanoptes_1_1camera_1_1camera_1_1_abstract_camera_1a89a5825fa03270a1ea10db22a361362d" kindref="member">properties</ref><sp/>=<sp/>result.decode(</highlight><highlight class="stringliteral">&apos;utf-8&apos;</highlight><highlight class="normal">).split(</highlight><highlight class="stringliteral">&apos;\n&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="classpanoptes_1_1camera_1_1camera_1_1_abstract_camera_1a89a5825fa03270a1ea10db22a361362d" kindref="member">properties</ref>:</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.logger.debug(</highlight><highlight class="stringliteral">&apos;<sp/><sp/>Found<sp/>{}<sp/>properties&apos;</highlight><highlight class="normal">.format(len(self.<ref refid="classpanoptes_1_1camera_1_1camera_1_1_abstract_camera_1a89a5825fa03270a1ea10db22a361362d" kindref="member">properties</ref>)))</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.logger.warning(</highlight><highlight class="stringliteral">&apos;<sp/><sp/>Could<sp/>not<sp/>determine<sp/>properties.&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classpanoptes_1_1camera_1_1camera_1_1_abstract_camera_1a91b4bcfe9f6a8aeb625856c71a31e3c8" kindref="member">get</ref>(self,<sp/>property):</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;&apos;&apos;</highlight></codeline>
<codeline lineno="56"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&apos;&apos;&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">assert</highlight><highlight class="normal"><sp/>self.<ref refid="classpanoptes_1_1camera_1_1camera_1_1_abstract_camera_1a89a5825fa03270a1ea10db22a361362d" kindref="member">properties</ref></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>property<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>self.<ref refid="classpanoptes_1_1camera_1_1camera_1_1_abstract_camera_1a89a5825fa03270a1ea10db22a361362d" kindref="member">properties</ref>:</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.logger.warning(</highlight><highlight class="stringliteral">&apos;<sp/><sp/>{}<sp/>is<sp/>not<sp/>in<sp/>list<sp/>of<sp/>properties<sp/>for<sp/>this<sp/>camera&apos;</highlight><highlight class="normal">.format(property))</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.logger.info(</highlight><highlight class="stringliteral">&apos;Getting<sp/>{}<sp/>from<sp/>camera&apos;</highlight><highlight class="normal">.format(property))</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>command<sp/>=<sp/>[</highlight><highlight class="stringliteral">&apos;gphoto2&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;--port&apos;</highlight><highlight class="normal">,<sp/>self.<ref refid="classpanoptes_1_1camera_1_1camera_1_1_abstract_camera_1aac981bfe591eba6efc5a69b594fae6a0" kindref="member">USB_port</ref>,<sp/></highlight><highlight class="stringliteral">&apos;--get-config&apos;</highlight><highlight class="normal">,<sp/>property]</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>subprocess.check_output(command,<sp/>stderr=subprocess.STDOUT)</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lines<sp/>=<sp/>result.decode(</highlight><highlight class="stringliteral">&apos;utf-8&apos;</highlight><highlight class="normal">).split(</highlight><highlight class="stringliteral">&apos;\n&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>lines</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classpanoptes_1_1camera_1_1camera_1_1_abstract_camera_1afb5c2f6421ee9ba14da3abc4665c7043" kindref="member">set</ref>(self,<sp/>property,<sp/>value):</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;&apos;&apos;</highlight></codeline>
<codeline lineno="71"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&apos;&apos;&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">assert</highlight><highlight class="normal"><sp/>self.<ref refid="classpanoptes_1_1camera_1_1camera_1_1_abstract_camera_1a89a5825fa03270a1ea10db22a361362d" kindref="member">properties</ref></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>property<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>self.<ref refid="classpanoptes_1_1camera_1_1camera_1_1_abstract_camera_1a89a5825fa03270a1ea10db22a361362d" kindref="member">properties</ref>:</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.logger.warning(</highlight><highlight class="stringliteral">&apos;<sp/><sp/>{}<sp/>is<sp/>not<sp/>in<sp/>list<sp/>of<sp/>properties<sp/>for<sp/>this<sp/>camera&apos;</highlight><highlight class="normal">.format(property))</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.logger.info(</highlight><highlight class="stringliteral">&apos;Setting<sp/>{}<sp/>on<sp/>camera&apos;</highlight><highlight class="normal">.format(property))</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>command<sp/>=<sp/>[</highlight><highlight class="stringliteral">&apos;gphoto2&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;--port&apos;</highlight><highlight class="normal">,<sp/>self.<ref refid="classpanoptes_1_1camera_1_1camera_1_1_abstract_camera_1aac981bfe591eba6efc5a69b594fae6a0" kindref="member">USB_port</ref>,<sp/></highlight><highlight class="stringliteral">&apos;--set-config&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;{}={}&apos;</highlight><highlight class="normal">.format(property,<sp/>value)]</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>subprocess.check_output(command)</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lines<sp/>=<sp/>result.decode(</highlight><highlight class="stringliteral">&apos;utf-8&apos;</highlight><highlight class="normal">).split(</highlight><highlight class="stringliteral">&apos;\n&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>lines</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classpanoptes_1_1camera_1_1camera_1_1_abstract_camera_1a5ceda7c8fff6618c7391493f22ab62e7" kindref="member">command</ref>(self,<sp/>command):</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;&apos;&apos;</highlight></codeline>
<codeline lineno="86"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&apos;&apos;&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.logger.info(</highlight><highlight class="stringliteral">&apos;Sending<sp/>command<sp/>{}<sp/>to<sp/>camera&apos;</highlight><highlight class="normal">.format(command))</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>command<sp/>=<sp/>[</highlight><highlight class="stringliteral">&apos;gphoto2&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;--port&apos;</highlight><highlight class="normal">,<sp/>self.<ref refid="classpanoptes_1_1camera_1_1camera_1_1_abstract_camera_1aac981bfe591eba6efc5a69b594fae6a0" kindref="member">USB_port</ref>,<sp/>command]</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>subprocess.check_output(command)</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lines<sp/>=<sp/>result.decode(</highlight><highlight class="stringliteral">&apos;utf-8&apos;</highlight><highlight class="normal">).split(</highlight><highlight class="stringliteral">&apos;\n&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>lines</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classpanoptes_1_1camera_1_1camera_1_1_abstract_camera_1ac4e0e3ae3cae9a2e93953f0084149d7b" kindref="member">get_iso</ref>(self):</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;&apos;&apos;</highlight></codeline>
<codeline lineno="96"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Queries<sp/>the<sp/>camera<sp/>for<sp/>the<sp/>ISO<sp/>setting<sp/>and<sp/>populates<sp/>the<sp/>self.iso</highlight></codeline>
<codeline lineno="97"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>property<sp/>with<sp/>a<sp/>string<sp/>containing<sp/>the<sp/>ISO<sp/>speed.</highlight></codeline>
<codeline lineno="98"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="99"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Also<sp/>examines<sp/>the<sp/>output<sp/>of<sp/>the<sp/>command<sp/>to<sp/>populate<sp/>the<sp/>self.iso_options</highlight></codeline>
<codeline lineno="100"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>property<sp/>which<sp/>is<sp/>a<sp/>dictionary<sp/>associating<sp/>the<sp/>iso<sp/>speed<sp/>(as<sp/>a<sp/>string)</highlight></codeline>
<codeline lineno="101"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>with<sp/>the<sp/>numeric<sp/>value<sp/>used<sp/>as<sp/>input<sp/>for<sp/>the<sp/>set_iso()<sp/>method.<sp/><sp/>The<sp/>keys</highlight></codeline>
<codeline lineno="102"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>in<sp/>this<sp/>dictionary<sp/>are<sp/>the<sp/>allowed<sp/>values<sp/>of<sp/>the<sp/>ISO<sp/>for<sp/>this<sp/>camera.</highlight></codeline>
<codeline lineno="103"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&apos;&apos;&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lines<sp/>=<sp/>self.<ref refid="classpanoptes_1_1camera_1_1camera_1_1_abstract_camera_1a91b4bcfe9f6a8aeb625856c71a31e3c8" kindref="member">get</ref>(</highlight><highlight class="stringliteral">&apos;/main/imgsettings/iso&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>re.match(</highlight><highlight class="stringliteral">&apos;Label:<sp/>ISO<sp/>Speed&apos;</highlight><highlight class="normal">,<sp/>lines[0])<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>re.match(</highlight><highlight class="stringliteral">&apos;Type:<sp/>RADIO&apos;</highlight><highlight class="normal">,<sp/>lines[1]):</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MatchObj<sp/>=<sp/>re.match(</highlight><highlight class="stringliteral">&apos;Current:\s([\w\d]+)&apos;</highlight><highlight class="normal">,<sp/>lines[2])</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>MatchObj:</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classpanoptes_1_1camera_1_1camera_1_1_abstract_camera_1ad1d8dc208d0d0f8712b6f45a049340d9" kindref="member">iso</ref><sp/>=<sp/>MatchObj.group(1)</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.logger.debug(</highlight><highlight class="stringliteral">&apos;<sp/><sp/>ISO<sp/>=<sp/>{}&apos;</highlight><highlight class="normal">.format(self.<ref refid="classpanoptes_1_1camera_1_1camera_1_1_abstract_camera_1ad1d8dc208d0d0f8712b6f45a049340d9" kindref="member">iso</ref>))</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">##<sp/>Get<sp/>Choices</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classpanoptes_1_1camera_1_1camera_1_1_abstract_camera_1a98b1aad6644b640f324517ddbf8aef42" kindref="member">iso_options</ref><sp/>=<sp/>{}</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>line<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>lines:</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MatchOption<sp/>=<sp/>re.match(</highlight><highlight class="stringliteral">&apos;Choice:<sp/>(\d{1,2})<sp/>(\d{3,})&apos;</highlight><highlight class="normal">,<sp/>line)</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>MatchOption:</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classpanoptes_1_1camera_1_1camera_1_1_abstract_camera_1a98b1aad6644b640f324517ddbf8aef42" kindref="member">iso_options</ref>[MatchOption.group(2)]<sp/>=<sp/>int(MatchOption.group(1))</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>self.<ref refid="classpanoptes_1_1camera_1_1camera_1_1_abstract_camera_1ad1d8dc208d0d0f8712b6f45a049340d9" kindref="member">iso</ref></highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classpanoptes_1_1camera_1_1camera_1_1_abstract_camera_1a8b4507dc473ceb7e1ff7a86c076bba4b" kindref="member">set_iso</ref>(self,<sp/>iso=200):</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;&apos;&apos;</highlight></codeline>
<codeline lineno="120"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Sets<sp/>the<sp/>ISO<sp/>speed<sp/>of<sp/>the<sp/>camera<sp/>after<sp/>checking<sp/>that<sp/>the<sp/>input<sp/>value<sp/>(a</highlight></codeline>
<codeline lineno="121"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>string<sp/>or<sp/>in)<sp/>is<sp/>in<sp/>the<sp/>list<sp/>of<sp/>allowed<sp/>values<sp/>in<sp/>the<sp/>self.iso_options</highlight></codeline>
<codeline lineno="122"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dictionary.</highlight></codeline>
<codeline lineno="123"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&apos;&apos;&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classpanoptes_1_1camera_1_1camera_1_1_abstract_camera_1ac4e0e3ae3cae9a2e93953f0084149d7b" kindref="member">get_iso</ref>()</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>str(iso)<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>self.iso_options.keys():</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.logger.warning(</highlight><highlight class="stringliteral">&apos;<sp/><sp/>ISO<sp/>{}<sp/>not<sp/>in<sp/>options<sp/>for<sp/>this<sp/>camera.&apos;</highlight><highlight class="normal">.format(iso))</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.logger.debug(</highlight><highlight class="stringliteral">&apos;<sp/><sp/>Setting<sp/>ISO<sp/>to<sp/>{}&apos;</highlight><highlight class="normal">.format(iso))</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lines<sp/>=<sp/>self.<ref refid="classpanoptes_1_1camera_1_1camera_1_1_abstract_camera_1afb5c2f6421ee9ba14da3abc4665c7043" kindref="member">set</ref>(</highlight><highlight class="stringliteral">&apos;/main/imgsettings/iso&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;{}&apos;</highlight><highlight class="normal">.format(self.<ref refid="classpanoptes_1_1camera_1_1camera_1_1_abstract_camera_1a98b1aad6644b640f324517ddbf8aef42" kindref="member">iso_options</ref>[str(iso)]))</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(lines)</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classpanoptes_1_1camera_1_1camera_1_1_abstract_camera_1a5d5767a2e44cefe1c15da4ed7017580e" kindref="member">get_serial_number</ref>(self):</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;&apos;&apos;</highlight></codeline>
<codeline lineno="135"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Gets<sp/>the<sp/>generic<sp/>Serial<sp/>Number<sp/>property<sp/>and<sp/>populates<sp/>the<sp/></highlight></codeline>
<codeline lineno="136"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.serial_number<sp/>property.</highlight></codeline>
<codeline lineno="137"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="138"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Note:<sp/>Some<sp/>cameras<sp/>override<sp/>this.<sp/>See<sp/>`canon.get_serial_number`</highlight></codeline>
<codeline lineno="139"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&apos;&apos;&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lines<sp/>=<sp/>self.<ref refid="classpanoptes_1_1camera_1_1camera_1_1_abstract_camera_1a91b4bcfe9f6a8aeb625856c71a31e3c8" kindref="member">get</ref>(</highlight><highlight class="stringliteral">&apos;/main/status/serialnumber&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>re.match(</highlight><highlight class="stringliteral">&apos;Label:<sp/>Serial<sp/>Number&apos;</highlight><highlight class="normal">,<sp/>lines[0])<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>re.match(</highlight><highlight class="stringliteral">&apos;Type:<sp/>TEXT&apos;</highlight><highlight class="normal">,<sp/>lines[1]):</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MatchObj<sp/>=<sp/>re.match(</highlight><highlight class="stringliteral">&apos;Current:\s([\w\d]+)&apos;</highlight><highlight class="normal">,<sp/>lines[2])</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>MatchObj:</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classpanoptes_1_1camera_1_1camera_1_1_abstract_camera_1a1ba38704d95c810c30edc7a63179b761" kindref="member">serial_number</ref><sp/>=<sp/>MatchObj.group(1)</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.logger.debug(</highlight><highlight class="stringliteral">&apos;<sp/><sp/>Serial<sp/>Number:<sp/>{}&apos;</highlight><highlight class="normal">.format(self.<ref refid="classpanoptes_1_1camera_1_1camera_1_1_abstract_camera_1a1ba38704d95c810c30edc7a63179b761" kindref="member">serial_number</ref>))</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>self.<ref refid="classpanoptes_1_1camera_1_1camera_1_1_abstract_camera_1a1ba38704d95c810c30edc7a63179b761" kindref="member">serial_number</ref></highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classpanoptes_1_1camera_1_1camera_1_1_abstract_camera_1a49b414587d1cc70bc4861c2b1c93c8bd" kindref="member">get_model</ref>(self):</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;&apos;&apos;</highlight></codeline>
<codeline lineno="151"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Gets<sp/>the<sp/>Camera<sp/>Model<sp/>string<sp/>from<sp/>the<sp/>camera<sp/>and<sp/>populates<sp/>the</highlight></codeline>
<codeline lineno="152"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.model<sp/>property.</highlight></codeline>
<codeline lineno="153"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&apos;&apos;&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lines<sp/>=<sp/>self.<ref refid="classpanoptes_1_1camera_1_1camera_1_1_abstract_camera_1a91b4bcfe9f6a8aeb625856c71a31e3c8" kindref="member">get</ref>(</highlight><highlight class="stringliteral">&apos;/main/status/cameramodel&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>re.match(</highlight><highlight class="stringliteral">&apos;Label:<sp/>Camera<sp/>Model&apos;</highlight><highlight class="normal">,<sp/>lines[0])<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>re.match(</highlight><highlight class="stringliteral">&apos;Type:<sp/>TEXT&apos;</highlight><highlight class="normal">,<sp/>lines[1]):</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MatchObj<sp/>=<sp/>re.match(</highlight><highlight class="stringliteral">&apos;Current:\s([\w\d]+)&apos;</highlight><highlight class="normal">,<sp/>lines[2])</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>MatchObj:</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classpanoptes_1_1camera_1_1camera_1_1_abstract_camera_1a0db8d53f8b55ccc56dd42317ac0820bd" kindref="member">model</ref><sp/>=<sp/>MatchObj.group(1)</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.logger.debug(</highlight><highlight class="stringliteral">&apos;<sp/><sp/>Camera<sp/>Model:<sp/>{}&apos;</highlight><highlight class="normal">.format(self.<ref refid="classpanoptes_1_1camera_1_1camera_1_1_abstract_camera_1a0db8d53f8b55ccc56dd42317ac0820bd" kindref="member">model</ref>))</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>self.<ref refid="classpanoptes_1_1camera_1_1camera_1_1_abstract_camera_1a0db8d53f8b55ccc56dd42317ac0820bd" kindref="member">model</ref></highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classpanoptes_1_1camera_1_1camera_1_1_abstract_camera_1ac25a6c2d75ea87d821d39732a03a2c01" kindref="member">get_device_version</ref>(self):</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;&apos;&apos;</highlight></codeline>
<codeline lineno="165"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Gets<sp/>the<sp/>Device<sp/>Version<sp/>string<sp/>from<sp/>the<sp/>camera<sp/>and<sp/>populates<sp/>the</highlight></codeline>
<codeline lineno="166"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.device_version<sp/>property.</highlight></codeline>
<codeline lineno="167"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&apos;&apos;&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lines<sp/>=<sp/>self.<ref refid="classpanoptes_1_1camera_1_1camera_1_1_abstract_camera_1a91b4bcfe9f6a8aeb625856c71a31e3c8" kindref="member">get</ref>(</highlight><highlight class="stringliteral">&apos;/main/status/deviceversion&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>re.match(</highlight><highlight class="stringliteral">&apos;Label:<sp/>Device<sp/>Version&apos;</highlight><highlight class="normal">,<sp/>lines[0])<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>re.match(</highlight><highlight class="stringliteral">&apos;Type:<sp/>TEXT&apos;</highlight><highlight class="normal">,<sp/>lines[1]):</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MatchObj<sp/>=<sp/>re.match(</highlight><highlight class="stringliteral">&apos;Current:\s([\w\d]+)&apos;</highlight><highlight class="normal">,<sp/>lines[2])</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>MatchObj:</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classpanoptes_1_1camera_1_1camera_1_1_abstract_camera_1af716a6b59421e0a8e5b37263567c9e67" kindref="member">device_version</ref><sp/>=<sp/>MatchObj.group(1)</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.logger.debug(</highlight><highlight class="stringliteral">&apos;<sp/><sp/>Device<sp/>Version:<sp/>{}&apos;</highlight><highlight class="normal">.format(self.<ref refid="classpanoptes_1_1camera_1_1camera_1_1_abstract_camera_1af716a6b59421e0a8e5b37263567c9e67" kindref="member">device_version</ref>))</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>self.<ref refid="classpanoptes_1_1camera_1_1camera_1_1_abstract_camera_1af716a6b59421e0a8e5b37263567c9e67" kindref="member">device_version</ref></highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classpanoptes_1_1camera_1_1camera_1_1_abstract_camera_1adc8342bd81f20827a7ad26a3d78f89b1" kindref="member">get_shutter_count</ref>(self):</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;&apos;&apos;</highlight></codeline>
<codeline lineno="179"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Gets<sp/>the<sp/>shutter<sp/>count<sp/>value<sp/>and<sp/>populates<sp/>the<sp/>self.shutter_count</highlight></codeline>
<codeline lineno="180"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>property.</highlight></codeline>
<codeline lineno="181"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&apos;&apos;&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lines<sp/>=<sp/>self.<ref refid="classpanoptes_1_1camera_1_1camera_1_1_abstract_camera_1a91b4bcfe9f6a8aeb625856c71a31e3c8" kindref="member">get</ref>(</highlight><highlight class="stringliteral">&apos;/main/status/shuttercounter&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>re.match(</highlight><highlight class="stringliteral">&apos;Label:<sp/>Shutter<sp/>Counter&apos;</highlight><highlight class="normal">,<sp/>lines[0])<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>re.match(</highlight><highlight class="stringliteral">&apos;Type:<sp/>TEXT&apos;</highlight><highlight class="normal">,<sp/>lines[1]):</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MatchObj<sp/>=<sp/>re.match(</highlight><highlight class="stringliteral">&apos;Current:\s([\w\d]+)&apos;</highlight><highlight class="normal">,<sp/>lines[2])</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>MatchObj:</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classpanoptes_1_1camera_1_1camera_1_1_abstract_camera_1ad81e63a96ed0e2097d2b19f822a74972" kindref="member">shutter_count</ref><sp/>=<sp/>int(MatchObj.group(1))</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.logger.debug(</highlight><highlight class="stringliteral">&apos;<sp/><sp/>Shutter<sp/>Count<sp/>=<sp/>{}&apos;</highlight><highlight class="normal">.format(self.<ref refid="classpanoptes_1_1camera_1_1camera_1_1_abstract_camera_1ad81e63a96ed0e2097d2b19f822a74972" kindref="member">shutter_count</ref>))</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>self.<ref refid="classpanoptes_1_1camera_1_1camera_1_1_abstract_camera_1ad81e63a96ed0e2097d2b19f822a74972" kindref="member">shutter_count</ref></highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">##-------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">##<sp/>Actions<sp/>Specific<sp/>to<sp/>Canon<sp/>/<sp/>gphoto</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">##-------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classpanoptes_1_1camera_1_1camera_1_1_abstract_camera_1ad65f22b8d650561472dd1d9df2a460e1" kindref="member">simple_capture_and_download</ref>(self,<sp/>exptime):</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;&apos;&apos;</highlight></codeline>
<codeline lineno="196"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&apos;&apos;&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exptime_index<sp/>=<sp/>23</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>self.<ref refid="classpanoptes_1_1camera_1_1camera_1_1_abstract_camera_1afb5c2f6421ee9ba14da3abc4665c7043" kindref="member">set</ref>(</highlight><highlight class="stringliteral">&apos;/main/capturesettings/shutterspeed&apos;</highlight><highlight class="normal">,<sp/>exptime_index)</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(result)</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>self.<ref refid="classpanoptes_1_1camera_1_1camera_1_1_abstract_camera_1a5ceda7c8fff6618c7391493f22ab62e7" kindref="member">command</ref>(</highlight><highlight class="stringliteral">&apos;--capture-image-and-download&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(result)</highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">##-------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">##<sp/>Generic<sp/>Panoptes<sp/>Camera<sp/>Methods</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">##-------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classpanoptes_1_1camera_1_1camera_1_1_abstract_camera_1a2cb2e17dd6077563b924cdbf3bc3ba12" kindref="member">connect</ref>(self):</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;&apos;&apos;</highlight></codeline>
<codeline lineno="209"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>For<sp/>Canon<sp/>DSLRs<sp/>using<sp/>gphoto2,<sp/>this<sp/>just<sp/>means<sp/>confirming<sp/>that<sp/>there<sp/>is</highlight></codeline>
<codeline lineno="210"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a<sp/>camera<sp/>on<sp/>that<sp/>port<sp/>and<sp/>that<sp/>we<sp/>can<sp/>communicate<sp/>with<sp/>it.</highlight></codeline>
<codeline lineno="211"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&apos;&apos;&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.logger.info(</highlight><highlight class="stringliteral">&apos;Connecting<sp/>to<sp/>camera&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classpanoptes_1_1camera_1_1camera_1_1_abstract_camera_1a0341610f703c04f775a3c7344248ecb3" kindref="member">list_config</ref>()</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">##<sp/>Set<sp/>auto<sp/>power<sp/>off<sp/>to<sp/>infinite</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>self.<ref refid="classpanoptes_1_1camera_1_1camera_1_1_abstract_camera_1afb5c2f6421ee9ba14da3abc4665c7043" kindref="member">set</ref>(</highlight><highlight class="stringliteral">&apos;/main/settings/autopoweroff&apos;</highlight><highlight class="normal">,<sp/>0)</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(result)</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">##<sp/>Set<sp/>capture<sp/>format<sp/>to<sp/>RAW</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>self.<ref refid="classpanoptes_1_1camera_1_1camera_1_1_abstract_camera_1afb5c2f6421ee9ba14da3abc4665c7043" kindref="member">set</ref>(</highlight><highlight class="stringliteral">&apos;/main/imgsettings/imageformat&apos;</highlight><highlight class="normal">,<sp/>9)</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(result)</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">##<sp/>Sync<sp/>date<sp/>and<sp/>time<sp/>to<sp/>computer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>self.<ref refid="classpanoptes_1_1camera_1_1camera_1_1_abstract_camera_1afb5c2f6421ee9ba14da3abc4665c7043" kindref="member">set</ref>(</highlight><highlight class="stringliteral">&apos;/main/actions/syncdatetime&apos;</highlight><highlight class="normal">,<sp/>1)</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(result)</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">##<sp/>Set<sp/>review<sp/>time<sp/>to<sp/>zero<sp/>(keeps<sp/>screen<sp/>off)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>self.<ref refid="classpanoptes_1_1camera_1_1camera_1_1_abstract_camera_1afb5c2f6421ee9ba14da3abc4665c7043" kindref="member">set</ref>(</highlight><highlight class="stringliteral">&apos;/main/settings/reviewtime&apos;</highlight><highlight class="normal">,<sp/>0)</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(result)</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">##<sp/>Set<sp/>copyright<sp/>string</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>self.<ref refid="classpanoptes_1_1camera_1_1camera_1_1_abstract_camera_1afb5c2f6421ee9ba14da3abc4665c7043" kindref="member">set</ref>(</highlight><highlight class="stringliteral">&apos;/main/settings/copyright&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;ProjectPANOPTES&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(result)</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">##<sp/>Get<sp/>Camera<sp/>Properties</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classpanoptes_1_1camera_1_1camera_1_1_abstract_camera_1a5d5767a2e44cefe1c15da4ed7017580e" kindref="member">get_serial_number</ref>()</highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classpanoptes_1_1camera_1_1camera_1_1_abstract_camera_1a9da811eb71e0852753c75bbf8f9b2494" kindref="member">start_cooling</ref>(self):</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;&apos;&apos;</highlight></codeline>
<codeline lineno="235"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>This<sp/>does<sp/>nothing<sp/>for<sp/>a<sp/>Canon<sp/>DSLR<sp/>as<sp/>it<sp/>does<sp/>not<sp/>have<sp/>cooling.</highlight></codeline>
<codeline lineno="236"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&apos;&apos;&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.logger.info(</highlight><highlight class="stringliteral">&apos;No<sp/>camera<sp/>cooling<sp/>available&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classpanoptes_1_1camera_1_1camera_1_1_abstract_camera_1a70c3b258f645d6e0a91f618686887c38" kindref="member">cooling</ref><sp/>=<sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classpanoptes_1_1camera_1_1camera_1_1_abstract_camera_1a87e7e5f5c1d86c1d699b003e41d17885" kindref="member">stop_cooling</ref>(self):</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;&apos;&apos;</highlight></codeline>
<codeline lineno="243"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>This<sp/>does<sp/>nothing<sp/>for<sp/>a<sp/>Canon<sp/>DSLR<sp/>as<sp/>it<sp/>does<sp/>not<sp/>have<sp/>cooling.</highlight></codeline>
<codeline lineno="244"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&apos;&apos;&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.logger.info(</highlight><highlight class="stringliteral">&apos;No<sp/>camera<sp/>cooling<sp/>available&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classpanoptes_1_1camera_1_1camera_1_1_abstract_camera_1a70c3b258f645d6e0a91f618686887c38" kindref="member">cooling</ref><sp/>=<sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classpanoptes_1_1camera_1_1camera_1_1_abstract_camera_1a77857afecd2f437968fd903e4e7b492b" kindref="member">is_exposing</ref>(self):</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;&apos;&apos;</highlight></codeline>
<codeline lineno="251"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&apos;&apos;&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">pass</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacepanoptes_1_1camera_1_1camera_1ac361e3116527ca5947a7bdabbeec4738" kindref="member">list_connected_cameras</ref>(logger=None):</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="257"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Uses<sp/>gphoto2<sp/>to<sp/>try<sp/>and<sp/>detect<sp/>which<sp/>cameras<sp/>are<sp/>connected.</highlight></codeline>
<codeline lineno="258"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="259"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Cameras<sp/>should<sp/>be<sp/>known<sp/>and<sp/>placed<sp/>in<sp/>config<sp/>but<sp/>this<sp/>is<sp/>a<sp/>useful<sp/>utility.</highlight></codeline>
<codeline lineno="260"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/>command<sp/>=<sp/>[</highlight><highlight class="stringliteral">&apos;gphoto2&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;--auto-detect&apos;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>=<sp/>subprocess.check_output(command)</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/>lines<sp/>=<sp/>result.decode(</highlight><highlight class="stringliteral">&apos;utf-8&apos;</highlight><highlight class="normal">).split(</highlight><highlight class="stringliteral">&apos;\n&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/>ports<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>line<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>lines:</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>camera_match<sp/>=<sp/>re.match(</highlight><highlight class="stringliteral">&apos;([\w\d\s_\.]{30})\s(usb:\d{3},\d{3})&apos;</highlight><highlight class="normal">,<sp/>line)</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>camera_match:</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>camera_name<sp/>=<sp/>camera_match.group(1).strip()</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>port<sp/>=<sp/>camera_match.group(2).strip()</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>logger:<sp/>logger.info(</highlight><highlight class="stringliteral">&apos;Found<sp/>&quot;{}&quot;<sp/>on<sp/>port<sp/>&quot;{}&quot;&apos;</highlight><highlight class="normal">.format(camera_name,<sp/>port))</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ports.append(port)</highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ports</highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>__name__<sp/>==<sp/></highlight><highlight class="stringliteral">&apos;__main__&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/>CameraPorts<sp/>=<sp/><ref refid="namespacepanoptes_1_1camera_1_1camera_1ac361e3116527ca5947a7bdabbeec4738" kindref="member">list_connected_cameras</ref>()</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/>Cameras<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>port<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>CameraPorts:</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Cameras.append(Camera(USB_port=port))</highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>camera<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>Cameras:</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>camera.list_config()</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>camera.simple_capture_and_download(1/10)</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sys.exit(0)</highlight></codeline>
    </programlisting>
    <location file="/home/wtgee/Projects/Panoptes/POCS/panoptes/camera/camera.py"/>
  </compounddef>
</doxygen>
