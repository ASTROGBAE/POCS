<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="_weather_station_8py" kind="file">
    <compoundname>WeatherStation.py</compoundname>
    <innerclass refid="classpanoptes_1_1weather_1_1_weather_station_1_1_weather_station" prot="public">panoptes::weather::WeatherStation::WeatherStation</innerclass>
    <innernamespace refid="namespacepanoptes_1_1weather_1_1_weather_station">panoptes::weather::WeatherStation</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1" refid="namespacepanoptes_1_1weather_1_1_weather_station" refkind="compound"><highlight class="keyword">import</highlight><highlight class="normal"><sp/>datetime</highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>os</highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>sys</highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>re</highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>astropy.io<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>ascii</highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>astropy.table<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>table</highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/><ref refid="namespacepanoptes_1_1utils" kindref="compound">panoptes.utils</ref><sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>logger</highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal">@logger.has_logger</highlight></codeline>
<codeline lineno="13" refid="classpanoptes_1_1weather_1_1_weather_station_1_1_weather_station" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classpanoptes_1_1weather_1_1_weather_station_1_1_weather_station" kindref="compound">WeatherStation</ref>():</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="15"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>This<sp/>object<sp/>is<sp/>used<sp/>to<sp/>determine<sp/>the<sp/>weather<sp/>safe/unsafe<sp/>condition.<sp/><sp/>It</highlight></codeline>
<codeline lineno="16"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>reads<sp/>a<sp/>simple<sp/>text<sp/>file<sp/>written<sp/>by<sp/>the<sp/>program<sp/>for<sp/>the<sp/>particular<sp/>type<sp/>of</highlight></codeline>
<codeline lineno="17"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>weather<sp/>station.</highlight></codeline>
<codeline lineno="18"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classpanoptes_1_1weather_1_1_weather_station_1_1_weather_station_1a118688739c99b238846802924734da14" kindref="member">__init__</ref>(self):</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">##<sp/>Set<sp/>up<sp/>log<sp/>file<sp/>for<sp/>weather<sp/>telemetry</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classpanoptes_1_1weather_1_1_weather_station_1_1_weather_station_1ab22b0ae09c7dccdd60e7fb777137ad26" kindref="member">telemetry_path</ref><sp/>=<sp/>os.path.join(</highlight><highlight class="stringliteral">&apos;/&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;var&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;log&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;PanoptesWeather&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>os.path.exists(self.<ref refid="classpanoptes_1_1weather_1_1_weather_station_1_1_weather_station_1ab22b0ae09c7dccdd60e7fb777137ad26" kindref="member">telemetry_path</ref>):<sp/>os.mkdir(self.<ref refid="classpanoptes_1_1weather_1_1_weather_station_1_1_weather_station_1ab22b0ae09c7dccdd60e7fb777137ad26" kindref="member">telemetry_path</ref>)</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classpanoptes_1_1weather_1_1_weather_station_1_1_weather_station_1a5b3488069c9bc75eafee004ae98e7b8c" kindref="member">update_logfiles</ref>()</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classpanoptes_1_1weather_1_1_weather_station_1_1_weather_station_1a1e6f7f3705494149bb3ad8df72ca0bd5" kindref="member">table_dtypes</ref><sp/>=<sp/>{</highlight><highlight class="stringliteral">&apos;Timestamp&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="stringliteral">&apos;S22&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;Safe&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="stringliteral">&apos;S6&apos;</highlight><highlight class="normal">}</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classpanoptes_1_1weather_1_1_weather_station_1_1_weather_station_1a5b3488069c9bc75eafee004ae98e7b8c" kindref="member">update_logfiles</ref>(self):</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;&apos;&apos;</highlight></codeline>
<codeline lineno="30"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Check<sp/>the<sp/>UT<sp/>date<sp/>and<sp/>re-define<sp/>the<sp/>filenames<sp/>for<sp/>the<sp/>telemetry<sp/>and</highlight></codeline>
<codeline lineno="31"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>conditions<sp/>fies<sp/>based<sp/>on<sp/>today&apos;s<sp/>UT<sp/>date.</highlight></codeline>
<codeline lineno="32"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&apos;&apos;&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>now<sp/>=<sp/>datetime.datetime.utcnow()</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classpanoptes_1_1weather_1_1_weather_station_1_1_weather_station_1a3e944b7623dedfc69810a11880ad4c39" kindref="member">condition_filename</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&apos;condition_{}UT.txt&apos;</highlight><highlight class="normal">.format(now.strftime(</highlight><highlight class="stringliteral">&apos;%Y%m%d&apos;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classpanoptes_1_1weather_1_1_weather_station_1_1_weather_station_1ae8e6d0b84ea67809858520788c5a686f" kindref="member">condition_file</ref><sp/>=<sp/>os.path.join(self.<ref refid="classpanoptes_1_1weather_1_1_weather_station_1_1_weather_station_1ab22b0ae09c7dccdd60e7fb777137ad26" kindref="member">telemetry_path</ref>,<sp/>self.<ref refid="classpanoptes_1_1weather_1_1_weather_station_1_1_weather_station_1a3e944b7623dedfc69810a11880ad4c39" kindref="member">condition_filename</ref>)</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classpanoptes_1_1weather_1_1_weather_station_1_1_weather_station_1a9eb8f990a2db9571de79ece142a273db" kindref="member">telemetry_filename</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&apos;telemetry_{}UT.txt&apos;</highlight><highlight class="normal">.format(now.strftime(</highlight><highlight class="stringliteral">&apos;%Y%m%d&apos;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classpanoptes_1_1weather_1_1_weather_station_1_1_weather_station_1a9d911806d6b9d3233c77c27804566f4c" kindref="member">telemetry_file</ref><sp/>=<sp/>os.path.join(self.<ref refid="classpanoptes_1_1weather_1_1_weather_station_1_1_weather_station_1ab22b0ae09c7dccdd60e7fb777137ad26" kindref="member">telemetry_path</ref>,<sp/>self.<ref refid="classpanoptes_1_1weather_1_1_weather_station_1_1_weather_station_1a9eb8f990a2db9571de79ece142a273db" kindref="member">telemetry_filename</ref>)</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classpanoptes_1_1weather_1_1_weather_station_1_1_weather_station_1a398e1b69d8945fb3cd2e72bb02c5bf5c" kindref="member">check_conditions</ref>(self,<sp/>stale=180):</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;&apos;&apos;</highlight></codeline>
<codeline lineno="42"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Read<sp/>the<sp/>conditions<sp/>file<sp/>and<sp/>populate<sp/>the<sp/>safe<sp/>property<sp/>with<sp/>True<sp/>or</highlight></codeline>
<codeline lineno="43"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>False<sp/>based<sp/>on<sp/>the<sp/>latest<sp/>datum.</highlight></codeline>
<codeline lineno="44"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&apos;&apos;&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.logger.debug(</highlight><highlight class="stringliteral">&apos;Opening<sp/>conditions<sp/>file:<sp/>{}&apos;</highlight><highlight class="normal">.format(self.<ref refid="classpanoptes_1_1weather_1_1_weather_station_1_1_weather_station_1ae8e6d0b84ea67809858520788c5a686f" kindref="member">condition_file</ref>))</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>conditions<sp/>=<sp/>ascii.read(self.<ref refid="classpanoptes_1_1weather_1_1_weather_station_1_1_weather_station_1ae8e6d0b84ea67809858520788c5a686f" kindref="member">condition_file</ref>,<sp/>guess=</highlight><highlight class="keyword">True</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>format=</highlight><highlight class="stringliteral">&apos;basic&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>converters={</highlight><highlight class="stringliteral">&apos;Timestamp&apos;</highlight><highlight class="normal">:<sp/>[ascii.convert_numpy(self.<ref refid="classpanoptes_1_1weather_1_1_weather_station_1_1_weather_station_1a1e6f7f3705494149bb3ad8df72ca0bd5" kindref="member">table_dtypes</ref>[</highlight><highlight class="stringliteral">&apos;Timestamp&apos;</highlight><highlight class="normal">])],</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;Safe&apos;</highlight><highlight class="normal">:<sp/>[ascii.convert_numpy(self.<ref refid="classpanoptes_1_1weather_1_1_weather_station_1_1_weather_station_1a1e6f7f3705494149bb3ad8df72ca0bd5" kindref="member">table_dtypes</ref>[</highlight><highlight class="stringliteral">&apos;Safe&apos;</highlight><highlight class="normal">])]}</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>last_entry<sp/>=<sp/>conditions[-1]</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>time_string<sp/>=<sp/>last_entry[</highlight><highlight class="stringliteral">&apos;Timestamp&apos;</highlight><highlight class="normal">].decode(</highlight><highlight class="stringliteral">&quot;utf-8&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>safe_string<sp/>=<sp/>last_entry[</highlight><highlight class="stringliteral">&apos;Safe&apos;</highlight><highlight class="normal">].decode(</highlight><highlight class="stringliteral">&quot;utf-8&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>timestamp<sp/>=<sp/>datetime.datetime.strptime(time_string,<sp/></highlight><highlight class="stringliteral">&apos;%Y/%m/%d<sp/>%H:%M:%S<sp/>UT&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>now<sp/>=<sp/>datetime.datetime.utcnow()</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dt<sp/>=<sp/>now<sp/>-<sp/>timestamp</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>dt.total_seconds()<sp/>&gt;<sp/>stale:</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.logger.warning(</highlight><highlight class="stringliteral">&apos;Weather<sp/>data<sp/>is<sp/>stale<sp/>by<sp/>{:.1f}<sp/>seconds&apos;</highlight><highlight class="normal">.format(dt.total_seconds()))</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classpanoptes_1_1weather_1_1_weather_station_1_1_weather_station_1ab4fb1311f53c99c3663c452c9a1ee520" kindref="member">safe</ref><sp/>=<sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>safe_string<sp/>==<sp/></highlight><highlight class="stringliteral">&apos;SAFE&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.logger.info(</highlight><highlight class="stringliteral">&apos;Weather<sp/>is<sp/>SAFE<sp/>(data<sp/>is<sp/>{:.1f}<sp/>seconds<sp/>old)&apos;</highlight><highlight class="normal">.format(dt.total_seconds()))</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classpanoptes_1_1weather_1_1_weather_station_1_1_weather_station_1ab4fb1311f53c99c3663c452c9a1ee520" kindref="member">safe</ref><sp/>=<sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>safe_string<sp/>==<sp/></highlight><highlight class="stringliteral">&apos;UNSAFE&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.logger.info(</highlight><highlight class="stringliteral">&apos;Weather<sp/>is<sp/>UNSAFE<sp/>(data<sp/>is<sp/>{:.1f}<sp/>seconds<sp/>old)&apos;</highlight><highlight class="normal">.format(dt.total_seconds()))</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classpanoptes_1_1weather_1_1_weather_station_1_1_weather_station_1ab4fb1311f53c99c3663c452c9a1ee520" kindref="member">safe</ref><sp/>=<sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.logger.warning(</highlight><highlight class="stringliteral">&apos;Weather<sp/>telemetry<sp/>not<sp/>parsed&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classpanoptes_1_1weather_1_1_weather_station_1_1_weather_station_1ab4fb1311f53c99c3663c452c9a1ee520" kindref="member">safe</ref><sp/>=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>__name__<sp/>==<sp/></highlight><highlight class="stringliteral">&apos;__main__&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>weather<sp/>=<sp/><ref refid="classpanoptes_1_1weather_1_1_weather_station_1_1_weather_station" kindref="compound">WeatherStation</ref>()</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>weather.check_conditions()</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/wtgee/Projects/Panoptes/POCS/panoptes/weather/WeatherStation.py"/>
  </compounddef>
</doxygen>
