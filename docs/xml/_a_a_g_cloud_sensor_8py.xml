<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="_a_a_g_cloud_sensor_8py" kind="file">
    <compoundname>AAGCloudSensor.py</compoundname>
    <innerclass refid="classpanoptes_1_1weather_1_1_a_a_g_cloud_sensor_1_1_a_a_g_cloud_sensor" prot="public">panoptes::weather::AAGCloudSensor::AAGCloudSensor</innerclass>
    <innernamespace refid="namespacepanoptes_1_1weather_1_1_a_a_g_cloud_sensor">panoptes::weather::AAGCloudSensor</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1" refid="namespacepanoptes_1_1weather_1_1_a_a_g_cloud_sensor" refkind="compound"><highlight class="keyword">import</highlight><highlight class="normal"><sp/>datetime</highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>os</highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>sys</highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>serial</highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>re</highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>time</highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>argparse</highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>math</highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>numpy<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>np</highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>astropy.units<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>u</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>astropy.table<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>table</highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>astropy.io.ascii<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>ascii</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/><ref refid="namespacepanoptes_1_1utils" kindref="compound">panoptes.utils</ref><sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>logger</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/><ref refid="namespacepanoptes_1_1weather" kindref="compound">panoptes.weather</ref><sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>WeatherStation</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal">@logger.has_logger</highlight></codeline>
<codeline lineno="20" refid="classpanoptes_1_1weather_1_1_a_a_g_cloud_sensor_1_1_a_a_g_cloud_sensor" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classpanoptes_1_1weather_1_1_a_a_g_cloud_sensor_1_1_a_a_g_cloud_sensor" kindref="compound">AAGCloudSensor</ref>(<ref refid="classpanoptes_1_1weather_1_1_weather_station_1_1_weather_station" kindref="compound">WeatherStation.WeatherStation</ref>):</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;&apos;&apos;</highlight></codeline>
<codeline lineno="22"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>This<sp/>class<sp/>is<sp/>for<sp/>the<sp/>AAG<sp/>Cloud<sp/>Sensor<sp/>device<sp/>which<sp/>can<sp/>be<sp/>communicated<sp/>with</highlight></codeline>
<codeline lineno="23"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>via<sp/>serial<sp/>commands.</highlight></codeline>
<codeline lineno="24"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="25"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>http://www.aagware.eu/aag/cloudwatcherNetwork/TechInfo/Rs232_Comms_v100.pdf</highlight></codeline>
<codeline lineno="26"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>http://www.aagware.eu/aag/cloudwatcherNetwork/TechInfo/Rs232_Comms_v110.pdf</highlight></codeline>
<codeline lineno="27"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>http://www.aagware.eu/aag/cloudwatcherNetwork/TechInfo/Rs232_Comms_v120.pdf</highlight></codeline>
<codeline lineno="28"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="29"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Command<sp/>List<sp/>(from<sp/>Rs232_Comms_v100.pdf)</highlight></codeline>
<codeline lineno="30"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>!A<sp/>=<sp/>Get<sp/>internal<sp/>name<sp/>(recieves<sp/>2<sp/>blocks)</highlight></codeline>
<codeline lineno="31"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>!B<sp/>=<sp/>Get<sp/>firmware<sp/>version<sp/>(recieves<sp/>2<sp/>blocks)</highlight></codeline>
<codeline lineno="32"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>!C<sp/>=<sp/>Get<sp/>values<sp/>(recieves<sp/>5<sp/>blocks)</highlight></codeline>
<codeline lineno="33"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Zener<sp/>voltage,<sp/>Ambient<sp/>Temperature,<sp/>Ambient<sp/>Temperature,<sp/>Rain<sp/>Sensor<sp/>Temperature,<sp/>HSB</highlight></codeline>
<codeline lineno="34"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>!D<sp/>=<sp/>Get<sp/>internal<sp/>errors<sp/>(recieves<sp/>5<sp/>blocks)</highlight></codeline>
<codeline lineno="35"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>!E<sp/>=<sp/>Get<sp/>rain<sp/>frequency<sp/>(recieves<sp/>2<sp/>blocks)</highlight></codeline>
<codeline lineno="36"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>!F<sp/>=<sp/>Get<sp/>switch<sp/>status<sp/>(recieves<sp/>2<sp/>blocks)</highlight></codeline>
<codeline lineno="37"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>!G<sp/>=<sp/>Set<sp/>switch<sp/>open<sp/>(recieves<sp/>2<sp/>blocks)</highlight></codeline>
<codeline lineno="38"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>!H<sp/>=<sp/>Set<sp/>switch<sp/>closed<sp/>(recieves<sp/>2<sp/>blocks)</highlight></codeline>
<codeline lineno="39"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>!Pxxxx<sp/>=<sp/>Set<sp/>PWM<sp/>value<sp/>to<sp/>xxxx<sp/>(recieves<sp/>2<sp/>blocks)</highlight></codeline>
<codeline lineno="40"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>!Q<sp/>=<sp/>Get<sp/>PWM<sp/>value<sp/>(recieves<sp/>2<sp/>blocks)</highlight></codeline>
<codeline lineno="41"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>!S<sp/>=<sp/>Get<sp/>sky<sp/>IR<sp/>temperature<sp/>(recieves<sp/>2<sp/>blocks)</highlight></codeline>
<codeline lineno="42"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>!T<sp/>=<sp/>Get<sp/>sensor<sp/>temperature<sp/>(recieves<sp/>2<sp/>blocks)</highlight></codeline>
<codeline lineno="43"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>!z<sp/>=<sp/>Reset<sp/>RS232<sp/>buffer<sp/>pointers<sp/>(recieves<sp/>1<sp/>blocks)</highlight></codeline>
<codeline lineno="44"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>!K<sp/>=<sp/>Get<sp/>serial<sp/>number<sp/>(recieves<sp/>2<sp/>blocks)</highlight></codeline>
<codeline lineno="45"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="46"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Return<sp/>Codes</highlight></codeline>
<codeline lineno="47"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&apos;1<sp/>&apos;<sp/><sp/><sp/><sp/>Infra<sp/>red<sp/>temperature<sp/>in<sp/>hundredth<sp/>of<sp/>degree<sp/>Celsius</highlight></codeline>
<codeline lineno="48"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&apos;2<sp/>&apos;<sp/><sp/><sp/><sp/>Infra<sp/>red<sp/>sensor<sp/>temperature<sp/>in<sp/>hundredth<sp/>of<sp/>degree<sp/>Celsius</highlight></codeline>
<codeline lineno="49"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&apos;3<sp/>&apos;<sp/><sp/><sp/><sp/>Analog0<sp/>output<sp/>0-1023<sp/>=&gt;<sp/>0<sp/>to<sp/>full<sp/>voltage<sp/>(Ambient<sp/>Temp<sp/>NTC)</highlight></codeline>
<codeline lineno="50"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&apos;4<sp/>&apos;<sp/><sp/><sp/><sp/>Analog2<sp/>output<sp/>0-1023<sp/>=&gt;<sp/>0<sp/>to<sp/>full<sp/>voltage<sp/>(LDR<sp/>ambient<sp/>light)</highlight></codeline>
<codeline lineno="51"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&apos;5<sp/>&apos;<sp/><sp/><sp/><sp/>Analog3<sp/>output<sp/>0-1023<sp/>=&gt;<sp/>0<sp/>to<sp/>full<sp/>voltage<sp/>(Rain<sp/>Sensor<sp/>Temp<sp/>NTC)</highlight></codeline>
<codeline lineno="52"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&apos;6<sp/>&apos;<sp/><sp/><sp/><sp/>Analog3<sp/>output<sp/>0-1023<sp/>=&gt;<sp/>0<sp/>to<sp/>full<sp/>voltage<sp/>(Zener<sp/>Voltage<sp/>reference)</highlight></codeline>
<codeline lineno="53"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&apos;E1&apos;<sp/><sp/><sp/><sp/>Number<sp/>of<sp/>internal<sp/>errors<sp/>reading<sp/>infra<sp/>red<sp/>sensor:<sp/>1st<sp/>address<sp/>byte</highlight></codeline>
<codeline lineno="54"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&apos;E2&apos;<sp/><sp/><sp/><sp/>Number<sp/>of<sp/>internal<sp/>errors<sp/>reading<sp/>infra<sp/>red<sp/>sensor:<sp/>command<sp/>byte</highlight></codeline>
<codeline lineno="55"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&apos;E3&apos;<sp/><sp/><sp/><sp/>Number<sp/>of<sp/>internal<sp/>errors<sp/>reading<sp/>infra<sp/>red<sp/>sensor:<sp/>2nd<sp/>address<sp/>byte</highlight></codeline>
<codeline lineno="56"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&apos;E4&apos;<sp/><sp/><sp/><sp/>Number<sp/>of<sp/>internal<sp/>errors<sp/>reading<sp/>infra<sp/>red<sp/>sensor:<sp/>PEC<sp/>byte<sp/>NB:<sp/>the<sp/>error<sp/>counters<sp/>are<sp/>reset<sp/>after<sp/>being<sp/>read.</highlight></codeline>
<codeline lineno="57"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&apos;N<sp/>&apos;<sp/><sp/><sp/><sp/>Internal<sp/>Name</highlight></codeline>
<codeline lineno="58"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&apos;V<sp/>&apos;<sp/><sp/><sp/><sp/>Firmware<sp/>Version<sp/>number</highlight></codeline>
<codeline lineno="59"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&apos;Q<sp/>&apos;<sp/><sp/><sp/><sp/>PWM<sp/>duty<sp/>cycle</highlight></codeline>
<codeline lineno="60"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&apos;R<sp/>&apos;<sp/><sp/><sp/><sp/>Rain<sp/>frequency<sp/>counter</highlight></codeline>
<codeline lineno="61"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&apos;X<sp/>&apos;<sp/><sp/><sp/><sp/>Switch<sp/>Opened</highlight></codeline>
<codeline lineno="62"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&apos;Y<sp/>&apos;<sp/><sp/><sp/><sp/>Switch<sp/>Closed</highlight></codeline>
<codeline lineno="63"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="64"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&apos;&apos;&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classpanoptes_1_1weather_1_1_a_a_g_cloud_sensor_1_1_a_a_g_cloud_sensor_1a7a10df4ece4632c4d76b52fef9581b59" kindref="member">__init__</ref>(self,<sp/>serial_address=&apos;/dev/ttyS0&apos;):</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>super().<ref refid="classpanoptes_1_1weather_1_1_a_a_g_cloud_sensor_1_1_a_a_g_cloud_sensor_1a7a10df4ece4632c4d76b52fef9581b59" kindref="member">__init__</ref>()</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">##<sp/>Initialize<sp/>Serial<sp/>Connection</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.logger.debug(</highlight><highlight class="stringliteral">&apos;Using<sp/>serial<sp/>address:<sp/>{}&apos;</highlight><highlight class="normal">.format(serial_address))</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>serial_address:</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.logger.info(</highlight><highlight class="stringliteral">&apos;Connecting<sp/>to<sp/>AAG<sp/>Cloud<sp/>Sensor&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classpanoptes_1_1weather_1_1_a_a_g_cloud_sensor_1_1_a_a_g_cloud_sensor_1aa0c7dff8ed1ee497fbbfc68fb6e58ad1" kindref="member">AAG</ref><sp/>=<sp/>serial.Serial(serial_address,<sp/>9600,<sp/>timeout=2)</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.logger.info(</highlight><highlight class="stringliteral">&quot;Connected<sp/>to<sp/>Cloud<sp/>Sensor<sp/>on<sp/>{}&quot;</highlight><highlight class="normal">.format(serial_address))</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal"><sp/>OSError<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>e:</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.logger.error(</highlight><highlight class="stringliteral">&apos;Unable<sp/>to<sp/>connect<sp/>to<sp/>AAG<sp/>Cloud<sp/>Sensor&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.logger.error(</highlight><highlight class="stringliteral">&apos;<sp/><sp/>{}&apos;</highlight><highlight class="normal">.format(e.errno))</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.logger.error(</highlight><highlight class="stringliteral">&apos;<sp/><sp/>{}&apos;</highlight><highlight class="normal">.format(e.strerror))</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classpanoptes_1_1weather_1_1_a_a_g_cloud_sensor_1_1_a_a_g_cloud_sensor_1aa0c7dff8ed1ee497fbbfc68fb6e58ad1" kindref="member">AAG</ref><sp/>=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.logger.error(</highlight><highlight class="stringliteral">&quot;Unable<sp/>to<sp/>connect<sp/>to<sp/>AAG<sp/>Cloud<sp/>Sensor&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classpanoptes_1_1weather_1_1_a_a_g_cloud_sensor_1_1_a_a_g_cloud_sensor_1aa0c7dff8ed1ee497fbbfc68fb6e58ad1" kindref="member">AAG</ref><sp/>=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classpanoptes_1_1weather_1_1_a_a_g_cloud_sensor_1_1_a_a_g_cloud_sensor_1aa0c7dff8ed1ee497fbbfc68fb6e58ad1" kindref="member">AAG</ref><sp/>=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">##<sp/>Initialize<sp/>Values</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classpanoptes_1_1weather_1_1_a_a_g_cloud_sensor_1_1_a_a_g_cloud_sensor_1ade51b53c88f60e73837d8d5ac2fc71f0" kindref="member">last_update</ref><sp/>=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classpanoptes_1_1weather_1_1_a_a_g_cloud_sensor_1_1_a_a_g_cloud_sensor_1a29a0f584b72e853367d71dcfcd2e9b9c" kindref="member">safe</ref><sp/>=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classpanoptes_1_1weather_1_1_a_a_g_cloud_sensor_1_1_a_a_g_cloud_sensor_1a07d70abaa35a7b9fcac9fcd2033e1614" kindref="member">ambient_temp</ref><sp/>=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classpanoptes_1_1weather_1_1_a_a_g_cloud_sensor_1_1_a_a_g_cloud_sensor_1a955d69e5216fb62b5e1aeda13ac18be3" kindref="member">sky_temp</ref><sp/>=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classpanoptes_1_1weather_1_1_a_a_g_cloud_sensor_1_1_a_a_g_cloud_sensor_1ad2284da235a417298daec7813be3b42e" kindref="member">wind_speed</ref><sp/>=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classpanoptes_1_1weather_1_1_a_a_g_cloud_sensor_1_1_a_a_g_cloud_sensor_1a14bc98dea01460ec3b52b4186cbcc9c8" kindref="member">internal_voltage</ref><sp/>=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classpanoptes_1_1weather_1_1_a_a_g_cloud_sensor_1_1_a_a_g_cloud_sensor_1a20272f150f1ed1407fe529e98a13b3f2" kindref="member">LDR_resistance</ref><sp/>=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classpanoptes_1_1weather_1_1_a_a_g_cloud_sensor_1_1_a_a_g_cloud_sensor_1af7dbfe154ca2cef094c7ccfeca737458" kindref="member">rain_sensor_temp</ref><sp/>=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classpanoptes_1_1weather_1_1_a_a_g_cloud_sensor_1_1_a_a_g_cloud_sensor_1ab72bad416c3868dfd79266d30a496f4f" kindref="member">PWM</ref><sp/>=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classpanoptes_1_1weather_1_1_a_a_g_cloud_sensor_1_1_a_a_g_cloud_sensor_1a75cf2248fd7093fec07e6bd2d706c97e" kindref="member">errors</ref><sp/>=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classpanoptes_1_1weather_1_1_a_a_g_cloud_sensor_1_1_a_a_g_cloud_sensor_1a52ec177fe086c3c2742a67b921e6350c" kindref="member">switch</ref><sp/>=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">##<sp/>Table<sp/>Info<sp/>(add<sp/>custom<sp/>dtypes<sp/>to<sp/>values<sp/>in<sp/>WeatherStation<sp/>class)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classpanoptes_1_1weather_1_1_weather_station_1_1_weather_station_1a1e6f7f3705494149bb3ad8df72ca0bd5" kindref="member">table_dtypes</ref>[</highlight><highlight class="stringliteral">&apos;Ambient<sp/>Temperature&apos;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;f4&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classpanoptes_1_1weather_1_1_weather_station_1_1_weather_station_1a1e6f7f3705494149bb3ad8df72ca0bd5" kindref="member">table_dtypes</ref>[</highlight><highlight class="stringliteral">&apos;Sky<sp/>Temperature&apos;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;f4&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classpanoptes_1_1weather_1_1_weather_station_1_1_weather_station_1a1e6f7f3705494149bb3ad8df72ca0bd5" kindref="member">table_dtypes</ref>[</highlight><highlight class="stringliteral">&apos;Rain<sp/>Frequency&apos;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;f4&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classpanoptes_1_1weather_1_1_weather_station_1_1_weather_station_1a1e6f7f3705494149bb3ad8df72ca0bd5" kindref="member">table_dtypes</ref>[</highlight><highlight class="stringliteral">&apos;Wind<sp/>Speed&apos;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;f4&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classpanoptes_1_1weather_1_1_weather_station_1_1_weather_station_1a1e6f7f3705494149bb3ad8df72ca0bd5" kindref="member">table_dtypes</ref>[</highlight><highlight class="stringliteral">&apos;Internal<sp/>Voltage&apos;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;f4&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classpanoptes_1_1weather_1_1_weather_station_1_1_weather_station_1a1e6f7f3705494149bb3ad8df72ca0bd5" kindref="member">table_dtypes</ref>[</highlight><highlight class="stringliteral">&apos;LDR<sp/>Resistance&apos;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;f4&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classpanoptes_1_1weather_1_1_weather_station_1_1_weather_station_1a1e6f7f3705494149bb3ad8df72ca0bd5" kindref="member">table_dtypes</ref>[</highlight><highlight class="stringliteral">&apos;Rain<sp/>Sensor<sp/>Temperature&apos;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;f4&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classpanoptes_1_1weather_1_1_weather_station_1_1_weather_station_1a1e6f7f3705494149bb3ad8df72ca0bd5" kindref="member">table_dtypes</ref>[</highlight><highlight class="stringliteral">&apos;PWM&apos;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;f4&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classpanoptes_1_1weather_1_1_weather_station_1_1_weather_station_1a1e6f7f3705494149bb3ad8df72ca0bd5" kindref="member">table_dtypes</ref>[</highlight><highlight class="stringliteral">&apos;E1&apos;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;i4&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classpanoptes_1_1weather_1_1_weather_station_1_1_weather_station_1a1e6f7f3705494149bb3ad8df72ca0bd5" kindref="member">table_dtypes</ref>[</highlight><highlight class="stringliteral">&apos;E2&apos;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;i4&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classpanoptes_1_1weather_1_1_weather_station_1_1_weather_station_1a1e6f7f3705494149bb3ad8df72ca0bd5" kindref="member">table_dtypes</ref>[</highlight><highlight class="stringliteral">&apos;E3&apos;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;i4&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classpanoptes_1_1weather_1_1_weather_station_1_1_weather_station_1a1e6f7f3705494149bb3ad8df72ca0bd5" kindref="member">table_dtypes</ref>[</highlight><highlight class="stringliteral">&apos;E4&apos;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;i4&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classpanoptes_1_1weather_1_1_weather_station_1_1_weather_station_1a1e6f7f3705494149bb3ad8df72ca0bd5" kindref="member">table_dtypes</ref>[</highlight><highlight class="stringliteral">&apos;Switch&apos;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;S6&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">##<sp/>Command<sp/>Translation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classpanoptes_1_1weather_1_1_a_a_g_cloud_sensor_1_1_a_a_g_cloud_sensor_1a88ef380ae0ef45b8cc3370a9e7a583e7" kindref="member">commands</ref><sp/>=<sp/>{</highlight><highlight class="stringliteral">&apos;!A&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="stringliteral">&apos;Get<sp/>internal<sp/>name&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;!B&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="stringliteral">&apos;Get<sp/>firmware<sp/>version&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;!C&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="stringliteral">&apos;Get<sp/>values&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;!D&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="stringliteral">&apos;Get<sp/>internal<sp/>errors&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;!E&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="stringliteral">&apos;Get<sp/>rain<sp/>frequency&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;!F&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="stringliteral">&apos;Get<sp/>switch<sp/>status&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;!G&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="stringliteral">&apos;Set<sp/>switch<sp/>open&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;!H&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="stringliteral">&apos;Set<sp/>switch<sp/>closed&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;!Pxxxx&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="stringliteral">&apos;Set<sp/>PWM<sp/>value<sp/>to<sp/>xxxx&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;!Q&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="stringliteral">&apos;Get<sp/>PWM<sp/>value&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;!S&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="stringliteral">&apos;Get<sp/>sky<sp/>IR<sp/>temperature&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;!T&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="stringliteral">&apos;Get<sp/>sensor<sp/>temperature&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;!z&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="stringliteral">&apos;Reset<sp/>RS232<sp/>buffer<sp/>pointers&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;!K&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="stringliteral">&apos;Get<sp/>serial<sp/>number&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;v!&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="stringliteral">&apos;Query<sp/>if<sp/>anemometer<sp/>enabled&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;V!&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="stringliteral">&apos;Get<sp/>wind<sp/>speed&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="classpanoptes_1_1weather_1_1_a_a_g_cloud_sensor_1_1_a_a_g_cloud_sensor_1aa0c7dff8ed1ee497fbbfc68fb6e58ad1" kindref="member">AAG</ref>:</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">##<sp/>Clear<sp/>Serial<sp/>Buffer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classpanoptes_1_1weather_1_1_a_a_g_cloud_sensor_1_1_a_a_g_cloud_sensor_1a6d9748b905c9924fe3663f0f68e1902a" kindref="member">clear_buffer</ref>()</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">##<sp/>Query<sp/>Device<sp/>Name</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classpanoptes_1_1weather_1_1_a_a_g_cloud_sensor_1_1_a_a_g_cloud_sensor_1a65611567a6449def80242976935cedc4" kindref="member">name</ref><sp/>=<sp/>self.<ref refid="classpanoptes_1_1weather_1_1_a_a_g_cloud_sensor_1_1_a_a_g_cloud_sensor_1a21f88819c5a4db542673aba9e6e83a95" kindref="member">query</ref>(</highlight><highlight class="stringliteral">&apos;!A&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;!N&apos;</highlight><highlight class="normal">).strip()</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.logger.info(</highlight><highlight class="stringliteral">&apos;Device<sp/>Name<sp/>is<sp/>&quot;{}&quot;&apos;</highlight><highlight class="normal">.format(self.<ref refid="classpanoptes_1_1weather_1_1_a_a_g_cloud_sensor_1_1_a_a_g_cloud_sensor_1a65611567a6449def80242976935cedc4" kindref="member">name</ref>))</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">##<sp/>Query<sp/>Firmware<sp/>Version</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classpanoptes_1_1weather_1_1_a_a_g_cloud_sensor_1_1_a_a_g_cloud_sensor_1a83eee00d327f0dc3b8840103afdca97e" kindref="member">firmware_version</ref><sp/>=<sp/>float(self.<ref refid="classpanoptes_1_1weather_1_1_a_a_g_cloud_sensor_1_1_a_a_g_cloud_sensor_1a21f88819c5a4db542673aba9e6e83a95" kindref="member">query</ref>(</highlight><highlight class="stringliteral">&apos;!B&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;!V&apos;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.logger.info(</highlight><highlight class="stringliteral">&apos;Firmware<sp/>Version<sp/>=<sp/>{}&apos;</highlight><highlight class="normal">.format(self.<ref refid="classpanoptes_1_1weather_1_1_a_a_g_cloud_sensor_1_1_a_a_g_cloud_sensor_1a83eee00d327f0dc3b8840103afdca97e" kindref="member">firmware_version</ref>))</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">##<sp/>Query<sp/>Serial<sp/>Number</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classpanoptes_1_1weather_1_1_a_a_g_cloud_sensor_1_1_a_a_g_cloud_sensor_1a0ef25327822adc8b48d5030808c8b7c6" kindref="member">serial_number</ref><sp/>=<sp/>self.<ref refid="classpanoptes_1_1weather_1_1_a_a_g_cloud_sensor_1_1_a_a_g_cloud_sensor_1a21f88819c5a4db542673aba9e6e83a95" kindref="member">query</ref>(</highlight><highlight class="stringliteral">&apos;!K&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;!K(\d{4})([\w\s\d]{8})&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.logger.info(</highlight><highlight class="stringliteral">&apos;Serial<sp/>Number:<sp/>{}&apos;</highlight><highlight class="normal">.format(self.<ref refid="classpanoptes_1_1weather_1_1_a_a_g_cloud_sensor_1_1_a_a_g_cloud_sensor_1a0ef25327822adc8b48d5030808c8b7c6" kindref="member">serial_number</ref>))</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classpanoptes_1_1weather_1_1_a_a_g_cloud_sensor_1_1_a_a_g_cloud_sensor_1a6d9748b905c9924fe3663f0f68e1902a" kindref="member">clear_buffer</ref>(self):</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;&apos;&apos;</highlight></codeline>
<codeline lineno="145"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Clear<sp/>response<sp/>buffer.</highlight></codeline>
<codeline lineno="146"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&apos;&apos;&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>count<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>self.AAG.inWaiting()<sp/>&gt;<sp/>0:</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>count<sp/>+=<sp/>1</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>contents<sp/>=<sp/>self.AAG.read(1)</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.logger.debug(&apos;Clearing<sp/>Buffer:<sp/>{0}&apos;.format(contents))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.logger.debug(</highlight><highlight class="stringliteral">&apos;Cleared<sp/>{}<sp/>bytes<sp/>from<sp/>buffer&apos;</highlight><highlight class="normal">.format(count))</highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classpanoptes_1_1weather_1_1_a_a_g_cloud_sensor_1_1_a_a_g_cloud_sensor_1a21f88819c5a4db542673aba9e6e83a95" kindref="member">query</ref>(self,<sp/>send,<sp/>expects,<sp/>max_tries=5,<sp/>delay=0.5):</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;&apos;&apos;</highlight></codeline>
<codeline lineno="157"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Generic<sp/>query<sp/>for<sp/>the<sp/>AAG<sp/>cloud<sp/>sensor.<sp/><sp/>Give<sp/>the<sp/>string<sp/>indicating<sp/>the</highlight></codeline>
<codeline lineno="158"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>type<sp/>of<sp/>query<sp/>and<sp/>the<sp/>string<sp/>which<sp/>you<sp/>expect<sp/>to<sp/>match<sp/>in<sp/>the<sp/>return.</highlight></codeline>
<codeline lineno="159"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&apos;&apos;&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">assert</highlight><highlight class="normal"><sp/>self.<ref refid="classpanoptes_1_1weather_1_1_a_a_g_cloud_sensor_1_1_a_a_g_cloud_sensor_1aa0c7dff8ed1ee497fbbfc68fb6e58ad1" kindref="member">AAG</ref></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classpanoptes_1_1weather_1_1_a_a_g_cloud_sensor_1_1_a_a_g_cloud_sensor_1a6d9748b905c9924fe3663f0f68e1902a" kindref="member">clear_buffer</ref>()</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">##<sp/>Figure<sp/>out<sp/>what<sp/>patterns<sp/>to<sp/>look<sp/>for<sp/>in<sp/>response</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/><ref refid="namespacepanoptes_1_1weather_1_1_a_a_g_cloud_sensor_1ad896609a36b9eff189c346be4e1ce0cd" kindref="member">type</ref>(expects)<sp/>==<sp/>str:</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nResponses<sp/>=<sp/>1</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>len(expects)<sp/>&gt;<sp/>3:</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">##<sp/>If<sp/>expects<sp/>is<sp/>a<sp/>long<sp/>string,<sp/>it<sp/>must<sp/>be<sp/>the<sp/>full<sp/>pattern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ResponsePatterns<sp/>=<sp/>{expects[0:2]:<sp/>expects}</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>expects<sp/>=<sp/>[expects[0:2]]</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">##<sp/>If<sp/>expects<sp/>is<sp/>a<sp/>short<sp/>string,<sp/>it<sp/>is<sp/>just<sp/>the<sp/>leading<sp/>flag<sp/>characters</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ResponsePatterns<sp/>=<sp/>{expects:<sp/></highlight><highlight class="stringliteral">&apos;{}&apos;</highlight><highlight class="normal">.format(expects.replace(</highlight><highlight class="stringliteral">&apos;!&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;\!&apos;</highlight><highlight class="normal">))<sp/>+<sp/></highlight><highlight class="stringliteral">&apos;([\s\w\d\.]{13})&apos;</highlight><highlight class="normal">}</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>expects<sp/>=<sp/>[expects]</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">##<sp/>In<sp/>either<sp/>case,<sp/>also<sp/>look<sp/>for<sp/>HSB</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ResponsePatterns[</highlight><highlight class="stringliteral">&apos;HSB&apos;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;\!&apos;</highlight><highlight class="normal">+chr(17)+</highlight><highlight class="stringliteral">&apos;\s{12}0&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>expects.append(</highlight><highlight class="stringliteral">&apos;HSB&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/><ref refid="namespacepanoptes_1_1weather_1_1_a_a_g_cloud_sensor_1ad896609a36b9eff189c346be4e1ce0cd" kindref="member">type</ref>(expects)<sp/>==<sp/>list:</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nResponses<sp/>=<sp/>len(expects)</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>expects.append(</highlight><highlight class="stringliteral">&apos;HSB&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ResponsePatterns<sp/>=<sp/>{}</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>expect<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>expects:</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ResponsePatterns[expect]<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;{}&apos;</highlight><highlight class="normal">.format(expect.replace(</highlight><highlight class="stringliteral">&apos;!&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;\!&apos;</highlight><highlight class="normal">))<sp/>+<sp/></highlight><highlight class="stringliteral">&apos;([\s\w\d\.]{&apos;</highlight><highlight class="normal">+</highlight><highlight class="stringliteral">&apos;{}&apos;</highlight><highlight class="normal">.format(15-len(expect))+</highlight><highlight class="stringliteral">&apos;})&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ResponsePatterns[</highlight><highlight class="stringliteral">&apos;HSB&apos;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;\!&apos;</highlight><highlight class="normal">+chr(17)+</highlight><highlight class="stringliteral">&apos;\s{12}0&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">##<sp/>Send<sp/>command</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>send<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>self.commands.keys():</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.logger.info(</highlight><highlight class="stringliteral">&apos;Sending<sp/>command:<sp/>{}&apos;</highlight><highlight class="normal">.format(self.<ref refid="classpanoptes_1_1weather_1_1_a_a_g_cloud_sensor_1_1_a_a_g_cloud_sensor_1a88ef380ae0ef45b8cc3370a9e7a583e7" kindref="member">commands</ref>[send]))</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.logger.warning(</highlight><highlight class="stringliteral">&apos;Sending<sp/>unknown<sp/>command&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>send<sp/>=<sp/>send.encode(</highlight><highlight class="stringliteral">&apos;utf-8&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nBytes<sp/>=<sp/>nResponses*15</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>complete_result<sp/>=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tries<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>complete_result:</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tries<sp/>+=<sp/>1</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.logger.debug(</highlight><highlight class="stringliteral">&quot;Sending:<sp/>{}&quot;</highlight><highlight class="normal">.format(send))</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.AAG.write(send)</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>time.sleep(delay)</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>responseString<sp/>=<sp/>str(self.AAG.read((nResponses+1)*15),<sp/></highlight><highlight class="stringliteral">&apos;utf-8&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>response_list<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(0,nResponses+1,1):</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>response_list.append(responseString[i*15:(i+1)*15])</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.logger.debug(</highlight><highlight class="stringliteral">&apos;Response:<sp/>&quot;{}&quot;&apos;</highlight><highlight class="normal">.format(responseString[i*15:(i+1)*15]))</highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">##<sp/>Look<sp/>for<sp/>expected<sp/>responses</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>{}</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>response<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>response_list:</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>expect<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>expects:</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IsMatch<sp/>=<sp/>re.match(ResponsePatterns[expect],<sp/>response)</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>IsMatch:</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.logger.debug(</highlight><highlight class="stringliteral">&apos;Found<sp/>match<sp/>to<sp/>{:&gt;3s}:<sp/>&quot;{}&quot;&apos;</highlight><highlight class="normal">.format(expect,<sp/>response))</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>expect<sp/>!=<sp/></highlight><highlight class="stringliteral">&apos;HSB&apos;</highlight><highlight class="normal">:<sp/>result[expect]<sp/>=<sp/>IsMatch.group(1)</highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>checklist<sp/>=<sp/>[expect<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>result.keys()<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>expect<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>expects<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>expect<sp/>!=<sp/></highlight><highlight class="stringliteral">&apos;HSB&apos;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>np.all(checklist):</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.logger.info(</highlight><highlight class="stringliteral">&apos;Found<sp/>all<sp/>expected<sp/>results&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>complete_result<sp/>=<sp/>result</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.logger.debug(</highlight><highlight class="stringliteral">&apos;Did<sp/>not<sp/>find<sp/>all<sp/>expected<sp/>results&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>tries<sp/>&gt;=<sp/>max_tries:</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.logger.warning(</highlight><highlight class="stringliteral">&apos;Did<sp/>not<sp/>find<sp/>all<sp/>expected<sp/>results<sp/>after<sp/>{}<sp/>tries&apos;</highlight><highlight class="normal">.format(max_tries))</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>nResponses<sp/>==<sp/>1:</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>complete_result[expects[0]]</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>complete_result</highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classpanoptes_1_1weather_1_1_a_a_g_cloud_sensor_1_1_a_a_g_cloud_sensor_1a8efe3df7efece5c33e89498a1ec8bacb" kindref="member">query_int_median</ref>(self,<sp/>send,<sp/>expect,<sp/>navg=5,<sp/>max_tries=5,<sp/>clip=False):</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;&apos;&apos;</highlight></codeline>
<codeline lineno="230"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Wrapper<sp/>around<sp/>the<sp/>query<sp/>method<sp/>which<sp/>assumes<sp/>the<sp/>result<sp/>is<sp/>an<sp/>integer</highlight></codeline>
<codeline lineno="231"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>and<sp/>which<sp/>queries<sp/>five<sp/>times<sp/>and<sp/>medians<sp/>the<sp/>result<sp/>and<sp/>return<sp/>that.</highlight></codeline>
<codeline lineno="232"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&apos;&apos;&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>values<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(0,navg,1):</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>response<sp/>=<sp/>self.<ref refid="classpanoptes_1_1weather_1_1_a_a_g_cloud_sensor_1_1_a_a_g_cloud_sensor_1a21f88819c5a4db542673aba9e6e83a95" kindref="member">query</ref>(send,<sp/>expect,<sp/>max_tries=max_tries)</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>response<sp/>=<sp/>int(response)</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>clip:</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>int(response)<sp/>&gt;<sp/>1022:<sp/>response<sp/>=<sp/>1022</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>int(response)<sp/>&lt;<sp/>1:<sp/>response<sp/>=<sp/>1</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>values.append(int(response))</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">pass</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>len(values)<sp/>&gt;=<sp/>navg-1:</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value<sp/>=<sp/>np.median(values)</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.logger.debug(</highlight><highlight class="stringliteral">&apos;Queried<sp/>{}<sp/>{}<sp/>{}<sp/>times<sp/>and<sp/>result<sp/>was<sp/>{:.1f}&apos;</highlight><highlight class="normal">.format(send,<sp/>expect,<sp/>navg,<sp/>value))</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value<sp/>=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>value</highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classpanoptes_1_1weather_1_1_a_a_g_cloud_sensor_1_1_a_a_g_cloud_sensor_1a3658b2bea1094ef75a9a826abe2c72d2" kindref="member">get_ambient_temperature</ref>(self):</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;&apos;&apos;</highlight></codeline>
<codeline lineno="254"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Populates<sp/>the<sp/>self.ambient_temp<sp/>property</highlight></codeline>
<codeline lineno="255"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="256"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Calculation<sp/>is<sp/>taken<sp/>from<sp/>Rs232_Comms_v100.pdf<sp/>section<sp/>&quot;Converting<sp/>values</highlight></codeline>
<codeline lineno="257"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sent<sp/>by<sp/>the<sp/>device<sp/>to<sp/>meaningful<sp/>units&quot;<sp/>item<sp/>5.</highlight></codeline>
<codeline lineno="258"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&apos;&apos;&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value<sp/>=<sp/>self.<ref refid="classpanoptes_1_1weather_1_1_a_a_g_cloud_sensor_1_1_a_a_g_cloud_sensor_1a8efe3df7efece5c33e89498a1ec8bacb" kindref="member">query_int_median</ref>(</highlight><highlight class="stringliteral">&apos;!T&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;!2&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>value:</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classpanoptes_1_1weather_1_1_a_a_g_cloud_sensor_1_1_a_a_g_cloud_sensor_1a07d70abaa35a7b9fcac9fcd2033e1614" kindref="member">ambient_temp</ref><sp/>=<sp/>(float(value)/100.<sp/>+<sp/>273.15)<sp/>*<sp/>u.K</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.logger.info(</highlight><highlight class="stringliteral">&apos;Ambient<sp/>Temperature<sp/>=<sp/>{:.1f}&apos;</highlight><highlight class="normal">.format(self.<ref refid="classpanoptes_1_1weather_1_1_a_a_g_cloud_sensor_1_1_a_a_g_cloud_sensor_1a07d70abaa35a7b9fcac9fcd2033e1614" kindref="member">ambient_temp</ref>))</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classpanoptes_1_1weather_1_1_a_a_g_cloud_sensor_1_1_a_a_g_cloud_sensor_1a07d70abaa35a7b9fcac9fcd2033e1614" kindref="member">ambient_temp</ref><sp/>=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classpanoptes_1_1weather_1_1_a_a_g_cloud_sensor_1_1_a_a_g_cloud_sensor_1a2b800408513e0cd01a0d481ed5391590" kindref="member">get_sky_temperature</ref>(self):</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;&apos;&apos;</highlight></codeline>
<codeline lineno="271"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Populates<sp/>the<sp/>self.sky_temp<sp/>property</highlight></codeline>
<codeline lineno="272"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="273"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Calculation<sp/>is<sp/>taken<sp/>from<sp/>Rs232_Comms_v100.pdf<sp/>section<sp/>&quot;Converting<sp/>values</highlight></codeline>
<codeline lineno="274"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sent<sp/>by<sp/>the<sp/>device<sp/>to<sp/>meaningful<sp/>units&quot;<sp/>item<sp/>1.</highlight></codeline>
<codeline lineno="275"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="276"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Does<sp/>this<sp/>n<sp/>times<sp/>as<sp/>recommended<sp/>by<sp/>the<sp/>&quot;Communication<sp/>operational<sp/></highlight></codeline>
<codeline lineno="277"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>recommendations&quot;<sp/>section<sp/>in<sp/>Rs232_Comms_v100.pdf</highlight></codeline>
<codeline lineno="278"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&apos;&apos;&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value<sp/>=<sp/>self.<ref refid="classpanoptes_1_1weather_1_1_a_a_g_cloud_sensor_1_1_a_a_g_cloud_sensor_1a8efe3df7efece5c33e89498a1ec8bacb" kindref="member">query_int_median</ref>(</highlight><highlight class="stringliteral">&apos;!S&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;!1&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>value:</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classpanoptes_1_1weather_1_1_a_a_g_cloud_sensor_1_1_a_a_g_cloud_sensor_1a955d69e5216fb62b5e1aeda13ac18be3" kindref="member">sky_temp</ref><sp/>=<sp/>(float(value)/100.<sp/>+<sp/>273.15)<sp/>*<sp/>u.K</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.logger.info(</highlight><highlight class="stringliteral">&apos;Sky<sp/>Temperature<sp/>=<sp/>{:.1f}&apos;</highlight><highlight class="normal">.format(self.<ref refid="classpanoptes_1_1weather_1_1_a_a_g_cloud_sensor_1_1_a_a_g_cloud_sensor_1a955d69e5216fb62b5e1aeda13ac18be3" kindref="member">sky_temp</ref>))</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classpanoptes_1_1weather_1_1_a_a_g_cloud_sensor_1_1_a_a_g_cloud_sensor_1a955d69e5216fb62b5e1aeda13ac18be3" kindref="member">sky_temp</ref><sp/>=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classpanoptes_1_1weather_1_1_a_a_g_cloud_sensor_1_1_a_a_g_cloud_sensor_1a6f7ef4439571265d4f84ce298bd022a7" kindref="member">get_rain_frequency</ref>(self):</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;&apos;&apos;</highlight></codeline>
<codeline lineno="289"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Populates<sp/>the<sp/>self.rain_frequency<sp/>property</highlight></codeline>
<codeline lineno="290"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&apos;&apos;&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value<sp/>=<sp/>self.<ref refid="classpanoptes_1_1weather_1_1_a_a_g_cloud_sensor_1_1_a_a_g_cloud_sensor_1a8efe3df7efece5c33e89498a1ec8bacb" kindref="member">query_int_median</ref>(</highlight><highlight class="stringliteral">&apos;!E&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;!R&apos;</highlight><highlight class="normal">,<sp/>clip=</highlight><highlight class="keyword">True</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>value:</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classpanoptes_1_1weather_1_1_a_a_g_cloud_sensor_1_1_a_a_g_cloud_sensor_1a3d4b05ea3ee4a3f733ab1883d59e6234" kindref="member">rain_frequency</ref><sp/>=<sp/>float(value)<sp/>*<sp/>100.<sp/>/<sp/>1023.</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.logger.info(</highlight><highlight class="stringliteral">&apos;Rain<sp/>Frequency<sp/>=<sp/>{:.1f}&apos;</highlight><highlight class="normal">.format(self.<ref refid="classpanoptes_1_1weather_1_1_a_a_g_cloud_sensor_1_1_a_a_g_cloud_sensor_1a3d4b05ea3ee4a3f733ab1883d59e6234" kindref="member">rain_frequency</ref>))</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classpanoptes_1_1weather_1_1_a_a_g_cloud_sensor_1_1_a_a_g_cloud_sensor_1a3d4b05ea3ee4a3f733ab1883d59e6234" kindref="member">rain_frequency</ref><sp/>=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classpanoptes_1_1weather_1_1_a_a_g_cloud_sensor_1_1_a_a_g_cloud_sensor_1a7a493a2ab468e15120fc767463cc767b" kindref="member">get_PWM</ref>(self):</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;&apos;&apos;</highlight></codeline>
<codeline lineno="301"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Populates<sp/>the<sp/>self.PWM<sp/>property.</highlight></codeline>
<codeline lineno="302"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="303"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Calculation<sp/>is<sp/>taken<sp/>from<sp/>Rs232_Comms_v100.pdf<sp/>section<sp/>&quot;Converting<sp/>values</highlight></codeline>
<codeline lineno="304"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sent<sp/>by<sp/>the<sp/>device<sp/>to<sp/>meaningful<sp/>units&quot;<sp/>item<sp/>3.</highlight></codeline>
<codeline lineno="305"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&apos;&apos;&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value<sp/>=<sp/>self.<ref refid="classpanoptes_1_1weather_1_1_a_a_g_cloud_sensor_1_1_a_a_g_cloud_sensor_1a8efe3df7efece5c33e89498a1ec8bacb" kindref="member">query_int_median</ref>(</highlight><highlight class="stringliteral">&apos;!Q&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;!Q&apos;</highlight><highlight class="normal">,<sp/>clip=</highlight><highlight class="keyword">True</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>value:</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classpanoptes_1_1weather_1_1_a_a_g_cloud_sensor_1_1_a_a_g_cloud_sensor_1ab72bad416c3868dfd79266d30a496f4f" kindref="member">PWM</ref><sp/>=<sp/>float(value)<sp/>*<sp/>100.<sp/>/<sp/>1023.</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.logger.info(</highlight><highlight class="stringliteral">&apos;PWM<sp/>Value<sp/>=<sp/>{:.1f}&apos;</highlight><highlight class="normal">.format(self.<ref refid="classpanoptes_1_1weather_1_1_a_a_g_cloud_sensor_1_1_a_a_g_cloud_sensor_1ab72bad416c3868dfd79266d30a496f4f" kindref="member">PWM</ref>))</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classpanoptes_1_1weather_1_1_a_a_g_cloud_sensor_1_1_a_a_g_cloud_sensor_1ab72bad416c3868dfd79266d30a496f4f" kindref="member">PWM</ref><sp/>=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classpanoptes_1_1weather_1_1_a_a_g_cloud_sensor_1_1_a_a_g_cloud_sensor_1a0470485863dec7a2b572422727f4bd42" kindref="member">get_values</ref>(self):</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;&apos;&apos;</highlight></codeline>
<codeline lineno="316"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Populates<sp/>the<sp/>self.internal_voltage,<sp/>self.LDR_resistance,<sp/>and<sp/></highlight></codeline>
<codeline lineno="317"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.rain_sensor_temp<sp/>properties</highlight></codeline>
<codeline lineno="318"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="319"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Calculation<sp/>is<sp/>taken<sp/>from<sp/>Rs232_Comms_v100.pdf<sp/>section<sp/>&quot;Converting<sp/>values</highlight></codeline>
<codeline lineno="320"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sent<sp/>by<sp/>the<sp/>device<sp/>to<sp/>meaningful<sp/>units&quot;<sp/>items<sp/>4,<sp/>6,<sp/>7.</highlight></codeline>
<codeline lineno="321"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&apos;&apos;&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ZenerConstant<sp/>=<sp/>3</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LDRPullupResistance<sp/>=<sp/>56.</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RainPullUpResistance<sp/>=<sp/>1</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RainResAt25<sp/>=<sp/>1</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RainBeta<sp/>=<sp/>3450.</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ABSZERO<sp/>=<sp/>273.15</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>internal_voltages<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LDR_resistances<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rain_sensor_temps<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(0,5,1):</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>responses<sp/>=<sp/>AAG.query(</highlight><highlight class="stringliteral">&apos;!C&apos;</highlight><highlight class="normal">,<sp/>[</highlight><highlight class="stringliteral">&apos;!6&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;!4&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;!5&apos;</highlight><highlight class="normal">])</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>responses:</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>internal_voltage<sp/>=<sp/>1023<sp/>*<sp/>ZenerConstant<sp/>/<sp/>float(responses[</highlight><highlight class="stringliteral">&apos;!6&apos;</highlight><highlight class="normal">])</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>internal_voltages.append(internal_voltage)</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LDR_resistance<sp/>=<sp/>LDRPullupResistance<sp/>/<sp/>((1023.<sp/>/<sp/>float(responses[</highlight><highlight class="stringliteral">&apos;!4&apos;</highlight><highlight class="normal">]))<sp/>-<sp/>1.)</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LDR_resistances.append(LDR_resistance)</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r<sp/>=<sp/>math.log(RainPullUpResistance<sp/>/<sp/>((1023.<sp/>/<sp/>float(responses[</highlight><highlight class="stringliteral">&apos;!5&apos;</highlight><highlight class="normal">]))<sp/>-<sp/>1.)<sp/>/<sp/>RainResAt25)</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rain_sensor_temp<sp/>=<sp/>1.<sp/>/<sp/>(r<sp/>/<sp/>RainBeta<sp/>+<sp/>1.<sp/>/<sp/>(ABSZERO<sp/>+<sp/>25.))</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rain_sensor_temps.append(rain_sensor_temp)</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">##<sp/>Median<sp/>Results</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>len(internal_voltages)<sp/>&gt;=<sp/>4:</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classpanoptes_1_1weather_1_1_a_a_g_cloud_sensor_1_1_a_a_g_cloud_sensor_1a14bc98dea01460ec3b52b4186cbcc9c8" kindref="member">internal_voltage</ref><sp/>=<sp/>np.median(internal_voltages)<sp/>*<sp/>u.volt</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.logger.info(</highlight><highlight class="stringliteral">&apos;Internal<sp/>Voltage<sp/>=<sp/>{}&apos;</highlight><highlight class="normal">.format(self.<ref refid="classpanoptes_1_1weather_1_1_a_a_g_cloud_sensor_1_1_a_a_g_cloud_sensor_1a14bc98dea01460ec3b52b4186cbcc9c8" kindref="member">internal_voltage</ref>))</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classpanoptes_1_1weather_1_1_a_a_g_cloud_sensor_1_1_a_a_g_cloud_sensor_1a14bc98dea01460ec3b52b4186cbcc9c8" kindref="member">internal_voltage</ref><sp/>=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>len(LDR_resistances)<sp/>&gt;=<sp/>4:</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classpanoptes_1_1weather_1_1_a_a_g_cloud_sensor_1_1_a_a_g_cloud_sensor_1a20272f150f1ed1407fe529e98a13b3f2" kindref="member">LDR_resistance</ref><sp/>=<sp/>np.median(LDR_resistances)<sp/>*<sp/>u.kiloohm</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.logger.info(</highlight><highlight class="stringliteral">&apos;LDR<sp/>Resistance<sp/>=<sp/>{}&apos;</highlight><highlight class="normal">.format(self.<ref refid="classpanoptes_1_1weather_1_1_a_a_g_cloud_sensor_1_1_a_a_g_cloud_sensor_1a20272f150f1ed1407fe529e98a13b3f2" kindref="member">LDR_resistance</ref>))</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classpanoptes_1_1weather_1_1_a_a_g_cloud_sensor_1_1_a_a_g_cloud_sensor_1a20272f150f1ed1407fe529e98a13b3f2" kindref="member">LDR_resistance</ref><sp/>=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>len(rain_sensor_temps)<sp/>&gt;=<sp/>4:</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classpanoptes_1_1weather_1_1_a_a_g_cloud_sensor_1_1_a_a_g_cloud_sensor_1af7dbfe154ca2cef094c7ccfeca737458" kindref="member">rain_sensor_temp</ref><sp/>=<sp/>np.median(rain_sensor_temps)<sp/>*<sp/>u.K</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.logger.info(</highlight><highlight class="stringliteral">&apos;Rain<sp/>Sensor<sp/>Temp<sp/>=<sp/>{}&apos;</highlight><highlight class="normal">.format(self.<ref refid="classpanoptes_1_1weather_1_1_a_a_g_cloud_sensor_1_1_a_a_g_cloud_sensor_1af7dbfe154ca2cef094c7ccfeca737458" kindref="member">rain_sensor_temp</ref>))</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classpanoptes_1_1weather_1_1_a_a_g_cloud_sensor_1_1_a_a_g_cloud_sensor_1af7dbfe154ca2cef094c7ccfeca737458" kindref="member">rain_sensor_temp</ref><sp/>=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="357"><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal"></highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classpanoptes_1_1weather_1_1_a_a_g_cloud_sensor_1_1_a_a_g_cloud_sensor_1a6f80972b9504cf2bfd8101fa6c368e96" kindref="member">get_errors</ref>(self):</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;&apos;&apos;</highlight></codeline>
<codeline lineno="361"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Populates<sp/>the<sp/>self.IR_errors<sp/>property</highlight></codeline>
<codeline lineno="362"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&apos;&apos;&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>response<sp/>=<sp/>AAG.query(</highlight><highlight class="stringliteral">&apos;!D&apos;</highlight><highlight class="normal">,<sp/>[</highlight><highlight class="stringliteral">&apos;!E1&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;!E2&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;!E3&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;!E4&apos;</highlight><highlight class="normal">])</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>response:</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classpanoptes_1_1weather_1_1_a_a_g_cloud_sensor_1_1_a_a_g_cloud_sensor_1a75cf2248fd7093fec07e6bd2d706c97e" kindref="member">errors</ref><sp/>=<sp/>{</highlight><highlight class="stringliteral">&apos;!E1&apos;</highlight><highlight class="normal">:<sp/>str(int(response[</highlight><highlight class="stringliteral">&apos;!E1&apos;</highlight><highlight class="normal">])),</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;!E2&apos;</highlight><highlight class="normal">:<sp/>str(int(response[</highlight><highlight class="stringliteral">&apos;!E2&apos;</highlight><highlight class="normal">])),</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;!E3&apos;</highlight><highlight class="normal">:<sp/>str(int(response[</highlight><highlight class="stringliteral">&apos;!E3&apos;</highlight><highlight class="normal">])),</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;!E4&apos;</highlight><highlight class="normal">:<sp/>str(int(response[</highlight><highlight class="stringliteral">&apos;!E4&apos;</highlight><highlight class="normal">]))<sp/>}</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.logger.info(</highlight><highlight class="stringliteral">&quot;Internal<sp/>Error<sp/>1:<sp/>&apos;{}&apos;&quot;</highlight><highlight class="normal">.format(int(response[</highlight><highlight class="stringliteral">&apos;!E1&apos;</highlight><highlight class="normal">])))</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.logger.info(</highlight><highlight class="stringliteral">&quot;Internal<sp/>Error<sp/>2:<sp/>&apos;{}&apos;&quot;</highlight><highlight class="normal">.format(int(response[</highlight><highlight class="stringliteral">&apos;!E2&apos;</highlight><highlight class="normal">])))</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.logger.info(</highlight><highlight class="stringliteral">&quot;Internal<sp/>Error<sp/>3:<sp/>&apos;{}&apos;&quot;</highlight><highlight class="normal">.format(int(response[</highlight><highlight class="stringliteral">&apos;!E3&apos;</highlight><highlight class="normal">])))</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.logger.info(</highlight><highlight class="stringliteral">&quot;Internal<sp/>Error<sp/>4:<sp/>&apos;{}&apos;&quot;</highlight><highlight class="normal">.format(int(response[</highlight><highlight class="stringliteral">&apos;!E4&apos;</highlight><highlight class="normal">])))</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classpanoptes_1_1weather_1_1_a_a_g_cloud_sensor_1_1_a_a_g_cloud_sensor_1a75cf2248fd7093fec07e6bd2d706c97e" kindref="member">errors</ref><sp/>=<sp/>{</highlight><highlight class="stringliteral">&apos;!E1&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;!E2&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;!E3&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;!E4&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"><sp/>}</highlight></codeline>
<codeline lineno="378"><highlight class="normal"></highlight></codeline>
<codeline lineno="379"><highlight class="normal"></highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classpanoptes_1_1weather_1_1_a_a_g_cloud_sensor_1_1_a_a_g_cloud_sensor_1af5768db633e014ca8cadc55f17d94cad" kindref="member">get_switch</ref>(self):</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;&apos;&apos;</highlight></codeline>
<codeline lineno="382"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Populates<sp/>the<sp/>self.switch<sp/>property</highlight></codeline>
<codeline lineno="383"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="384"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Unlike<sp/>other<sp/>queries,<sp/>this<sp/>method<sp/>has<sp/>to<sp/>check<sp/>if<sp/>the<sp/>return<sp/>matches<sp/>a</highlight></codeline>
<codeline lineno="385"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!X<sp/>or<sp/>!Y<sp/>pattern<sp/>(indicating<sp/>open<sp/>and<sp/>closed<sp/>respectively)<sp/>rather<sp/>than</highlight></codeline>
<codeline lineno="386"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>read<sp/>a<sp/>value.</highlight></codeline>
<codeline lineno="387"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&apos;&apos;&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classpanoptes_1_1weather_1_1_a_a_g_cloud_sensor_1_1_a_a_g_cloud_sensor_1a52ec177fe086c3c2742a67b921e6350c" kindref="member">switch</ref><sp/>=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>max_tries<sp/>=<sp/>3</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tries<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>status:</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tries<sp/>+=<sp/>1</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>query_open<sp/>=<sp/>self.<ref refid="classpanoptes_1_1weather_1_1_a_a_g_cloud_sensor_1_1_a_a_g_cloud_sensor_1a21f88819c5a4db542673aba9e6e83a95" kindref="member">query</ref>(</highlight><highlight class="stringliteral">&apos;!F&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;!X&apos;</highlight><highlight class="normal">,<sp/>max_tries=2)</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>query_closed<sp/>=<sp/>self.<ref refid="classpanoptes_1_1weather_1_1_a_a_g_cloud_sensor_1_1_a_a_g_cloud_sensor_1a21f88819c5a4db542673aba9e6e83a95" kindref="member">query</ref>(</highlight><highlight class="stringliteral">&apos;!F&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;!Y&apos;</highlight><highlight class="normal">,<sp/>max_tries=2)</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>query_open<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>query_closed:</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;OPEN&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>query_open<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>query_closed:</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;CLOSED&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>status<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>tries<sp/>&gt;=<sp/>max_tries:</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;UNKNOWN&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classpanoptes_1_1weather_1_1_a_a_g_cloud_sensor_1_1_a_a_g_cloud_sensor_1a52ec177fe086c3c2742a67b921e6350c" kindref="member">switch</ref><sp/>=<sp/>status</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.logger.info(</highlight><highlight class="stringliteral">&apos;Switch<sp/>Status<sp/>=<sp/>{}&apos;</highlight><highlight class="normal">.format(self.<ref refid="classpanoptes_1_1weather_1_1_a_a_g_cloud_sensor_1_1_a_a_g_cloud_sensor_1a52ec177fe086c3c2742a67b921e6350c" kindref="member">switch</ref>))</highlight></codeline>
<codeline lineno="406"><highlight class="normal"></highlight></codeline>
<codeline lineno="407"><highlight class="normal"></highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classpanoptes_1_1weather_1_1_a_a_g_cloud_sensor_1_1_a_a_g_cloud_sensor_1ab954fb27508639eb0c0cba4d0e916c8b" kindref="member">wind_speed_enabled</ref>(self,<sp/>max_tries=3):</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;&apos;&apos;</highlight></codeline>
<codeline lineno="410"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Method<sp/>returns<sp/>true<sp/>or<sp/>false<sp/>depending<sp/>on<sp/>whether<sp/>the<sp/>device<sp/>supports</highlight></codeline>
<codeline lineno="411"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wind<sp/>speed<sp/>measurements.</highlight></codeline>
<codeline lineno="412"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&apos;&apos;&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>self.<ref refid="classpanoptes_1_1weather_1_1_a_a_g_cloud_sensor_1_1_a_a_g_cloud_sensor_1a21f88819c5a4db542673aba9e6e83a95" kindref="member">query</ref>(</highlight><highlight class="stringliteral">&apos;v!&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;!v&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>result:</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>int(result)<sp/>==<sp/>1:</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.logger.debug(</highlight><highlight class="stringliteral">&apos;Anemometer<sp/>enabled&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.logger.debug(</highlight><highlight class="stringliteral">&apos;Anemometer<sp/>not<sp/>enabled&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.logger.debug(</highlight><highlight class="stringliteral">&apos;Anemometer<sp/>not<sp/>enabled&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="424"><highlight class="normal"></highlight></codeline>
<codeline lineno="425"><highlight class="normal"></highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classpanoptes_1_1weather_1_1_a_a_g_cloud_sensor_1_1_a_a_g_cloud_sensor_1ae6d024c5a4985be64495205eca5ac173" kindref="member">get_wind_speed</ref>(self):</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;&apos;&apos;</highlight></codeline>
<codeline lineno="428"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Populates<sp/>the<sp/>self.wind_speed<sp/>property</highlight></codeline>
<codeline lineno="429"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="430"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Based<sp/>on<sp/>the<sp/>information<sp/>in<sp/>Rs232_Comms_v120.pdf<sp/>document</highlight></codeline>
<codeline lineno="431"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="432"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Medians<sp/>5<sp/>measurements.<sp/><sp/>This<sp/>isn&apos;t<sp/>mentioned<sp/>specifically<sp/>by<sp/>the<sp/>manual</highlight></codeline>
<codeline lineno="433"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>but<sp/>I&apos;m<sp/>guessing<sp/>it<sp/>won&apos;t<sp/>hurt.</highlight></codeline>
<codeline lineno="434"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&apos;&apos;&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>AAG.wind_speed_enabled():</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WindSpeeds<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(0,5,1):</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>response<sp/>=<sp/>self.<ref refid="classpanoptes_1_1weather_1_1_a_a_g_cloud_sensor_1_1_a_a_g_cloud_sensor_1a21f88819c5a4db542673aba9e6e83a95" kindref="member">query</ref>(</highlight><highlight class="stringliteral">&apos;V!&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;!w&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>response:</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WindSpeeds.append(float(response))</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>len(WindSpeeds)<sp/>&gt;=<sp/>4:</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classpanoptes_1_1weather_1_1_a_a_g_cloud_sensor_1_1_a_a_g_cloud_sensor_1ad2284da235a417298daec7813be3b42e" kindref="member">wind_speed</ref><sp/>=<sp/>np.median(WindSpeeds)<sp/>*<sp/>u.km<sp/>/<sp/>u.hr</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.logger.info(</highlight><highlight class="stringliteral">&apos;Wind<sp/>speed<sp/>=<sp/>{:.1f}&apos;</highlight><highlight class="normal">.format(self.<ref refid="classpanoptes_1_1weather_1_1_a_a_g_cloud_sensor_1_1_a_a_g_cloud_sensor_1ad2284da235a417298daec7813be3b42e" kindref="member">wind_speed</ref>))</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classpanoptes_1_1weather_1_1_a_a_g_cloud_sensor_1_1_a_a_g_cloud_sensor_1ad2284da235a417298daec7813be3b42e" kindref="member">wind_speed</ref><sp/>=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classpanoptes_1_1weather_1_1_a_a_g_cloud_sensor_1_1_a_a_g_cloud_sensor_1ad2284da235a417298daec7813be3b42e" kindref="member">wind_speed</ref><sp/>=<sp/>0.<sp/>*<sp/>u.km<sp/>/<sp/>u.hr</highlight></codeline>
<codeline lineno="448"><highlight class="normal"></highlight></codeline>
<codeline lineno="449"><highlight class="normal"></highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classpanoptes_1_1weather_1_1_a_a_g_cloud_sensor_1_1_a_a_g_cloud_sensor_1ac67dd6c1f890116bfaa573324ad7ca22" kindref="member">update_weather</ref>(self):</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;&apos;&apos;</highlight></codeline>
<codeline lineno="452"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Queries<sp/>the<sp/>values<sp/>for<sp/>writing<sp/>to<sp/>the<sp/>telemetry<sp/>file.</highlight></codeline>
<codeline lineno="453"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&apos;&apos;&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classpanoptes_1_1weather_1_1_a_a_g_cloud_sensor_1_1_a_a_g_cloud_sensor_1a3658b2bea1094ef75a9a826abe2c72d2" kindref="member">get_ambient_temperature</ref>()</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classpanoptes_1_1weather_1_1_a_a_g_cloud_sensor_1_1_a_a_g_cloud_sensor_1a2b800408513e0cd01a0d481ed5391590" kindref="member">get_sky_temperature</ref>()</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classpanoptes_1_1weather_1_1_a_a_g_cloud_sensor_1_1_a_a_g_cloud_sensor_1ae6d024c5a4985be64495205eca5ac173" kindref="member">get_wind_speed</ref>()</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classpanoptes_1_1weather_1_1_a_a_g_cloud_sensor_1_1_a_a_g_cloud_sensor_1a6f7ef4439571265d4f84ce298bd022a7" kindref="member">get_rain_frequency</ref>()</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classpanoptes_1_1weather_1_1_a_a_g_cloud_sensor_1_1_a_a_g_cloud_sensor_1a7a493a2ab468e15120fc767463cc767b" kindref="member">get_PWM</ref>()</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classpanoptes_1_1weather_1_1_a_a_g_cloud_sensor_1_1_a_a_g_cloud_sensor_1a0470485863dec7a2b572422727f4bd42" kindref="member">get_values</ref>()</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classpanoptes_1_1weather_1_1_a_a_g_cloud_sensor_1_1_a_a_g_cloud_sensor_1a6f80972b9504cf2bfd8101fa6c368e96" kindref="member">get_errors</ref>()</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classpanoptes_1_1weather_1_1_a_a_g_cloud_sensor_1_1_a_a_g_cloud_sensor_1af5768db633e014ca8cadc55f17d94cad" kindref="member">get_switch</ref>()</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classpanoptes_1_1weather_1_1_a_a_g_cloud_sensor_1_1_a_a_g_cloud_sensor_1a1c0905b10a45df4de5a146d1313ad69c" kindref="member">make_safety_decision</ref>()</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classpanoptes_1_1weather_1_1_a_a_g_cloud_sensor_1_1_a_a_g_cloud_sensor_1ade51b53c88f60e73837d8d5ac2fc71f0" kindref="member">last_update</ref><sp/>=<sp/>datetime.datetime.utcnow()</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classpanoptes_1_1weather_1_1_a_a_g_cloud_sensor_1_1_a_a_g_cloud_sensor_1aa48bdb474bf8d98289ccd034e8660a08" kindref="member">update_telemetry_files</ref>()</highlight></codeline>
<codeline lineno="465"><highlight class="normal"></highlight></codeline>
<codeline lineno="466"><highlight class="normal"></highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classpanoptes_1_1weather_1_1_a_a_g_cloud_sensor_1_1_a_a_g_cloud_sensor_1a06aa5d9b85f18fcfe0113695a1e0c13d" kindref="member">read_AAG_telemetry</ref>(self):</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>telemetry<sp/>=<sp/>ascii.read(self.<ref refid="classpanoptes_1_1weather_1_1_weather_station_1_1_weather_station_1a9d911806d6b9d3233c77c27804566f4c" kindref="member">telemetry_file</ref>,<sp/>guess=</highlight><highlight class="keyword">False</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>format=</highlight><highlight class="stringliteral">&apos;basic&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>names=(</highlight><highlight class="stringliteral">&apos;Timestamp&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;Safe&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;Ambient<sp/>Temperature&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;Sky<sp/>Temperature&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;Rain<sp/>Frequency&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;Wind<sp/>Speed&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;Internal<sp/>Voltage&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;LDR<sp/>Resistance&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;Rain<sp/>Sensor<sp/>Temperature&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;PWM&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;E1&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;E2&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;E3&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;E4&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;Switch&apos;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>converters={</highlight><highlight class="stringliteral">&apos;Timestamp&apos;</highlight><highlight class="normal">:<sp/>[ascii.convert_numpy(self.<ref refid="classpanoptes_1_1weather_1_1_weather_station_1_1_weather_station_1a1e6f7f3705494149bb3ad8df72ca0bd5" kindref="member">table_dtypes</ref>[</highlight><highlight class="stringliteral">&apos;Timestamp&apos;</highlight><highlight class="normal">])],</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;Safe&apos;</highlight><highlight class="normal">:<sp/>[ascii.convert_numpy(self.<ref refid="classpanoptes_1_1weather_1_1_weather_station_1_1_weather_station_1a1e6f7f3705494149bb3ad8df72ca0bd5" kindref="member">table_dtypes</ref>[</highlight><highlight class="stringliteral">&apos;Safe&apos;</highlight><highlight class="normal">])],</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;Ambient<sp/>Temperature&apos;</highlight><highlight class="normal">:<sp/>[ascii.convert_numpy(self.<ref refid="classpanoptes_1_1weather_1_1_weather_station_1_1_weather_station_1a1e6f7f3705494149bb3ad8df72ca0bd5" kindref="member">table_dtypes</ref>[</highlight><highlight class="stringliteral">&apos;Ambient<sp/>Temperature&apos;</highlight><highlight class="normal">])],</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;Sky<sp/>Temperature&apos;</highlight><highlight class="normal">:<sp/>[ascii.convert_numpy(self.<ref refid="classpanoptes_1_1weather_1_1_weather_station_1_1_weather_station_1a1e6f7f3705494149bb3ad8df72ca0bd5" kindref="member">table_dtypes</ref>[</highlight><highlight class="stringliteral">&apos;Sky<sp/>Temperature&apos;</highlight><highlight class="normal">])],</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;Rain<sp/>Frequency&apos;</highlight><highlight class="normal">:<sp/>[ascii.convert_numpy(self.<ref refid="classpanoptes_1_1weather_1_1_weather_station_1_1_weather_station_1a1e6f7f3705494149bb3ad8df72ca0bd5" kindref="member">table_dtypes</ref>[</highlight><highlight class="stringliteral">&apos;Rain<sp/>Frequency&apos;</highlight><highlight class="normal">])],</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;Wind<sp/>Speed&apos;</highlight><highlight class="normal">:<sp/>[ascii.convert_numpy(self.<ref refid="classpanoptes_1_1weather_1_1_weather_station_1_1_weather_station_1a1e6f7f3705494149bb3ad8df72ca0bd5" kindref="member">table_dtypes</ref>[</highlight><highlight class="stringliteral">&apos;Wind<sp/>Speed&apos;</highlight><highlight class="normal">])],</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;Internal<sp/>Voltage&apos;</highlight><highlight class="normal">:<sp/>[ascii.convert_numpy(self.<ref refid="classpanoptes_1_1weather_1_1_weather_station_1_1_weather_station_1a1e6f7f3705494149bb3ad8df72ca0bd5" kindref="member">table_dtypes</ref>[</highlight><highlight class="stringliteral">&apos;Internal<sp/>Voltage&apos;</highlight><highlight class="normal">])],</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;LDR<sp/>Resistance&apos;</highlight><highlight class="normal">:<sp/>[ascii.convert_numpy(self.<ref refid="classpanoptes_1_1weather_1_1_weather_station_1_1_weather_station_1a1e6f7f3705494149bb3ad8df72ca0bd5" kindref="member">table_dtypes</ref>[</highlight><highlight class="stringliteral">&apos;LDR<sp/>Resistance&apos;</highlight><highlight class="normal">])],</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;Rain<sp/>Sensor<sp/>Temperature&apos;</highlight><highlight class="normal">:<sp/>[ascii.convert_numpy(self.<ref refid="classpanoptes_1_1weather_1_1_weather_station_1_1_weather_station_1a1e6f7f3705494149bb3ad8df72ca0bd5" kindref="member">table_dtypes</ref>[</highlight><highlight class="stringliteral">&apos;Rain<sp/>Sensor<sp/>Temperature&apos;</highlight><highlight class="normal">])],</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;PWM&apos;</highlight><highlight class="normal">:<sp/>[ascii.convert_numpy(self.<ref refid="classpanoptes_1_1weather_1_1_weather_station_1_1_weather_station_1a1e6f7f3705494149bb3ad8df72ca0bd5" kindref="member">table_dtypes</ref>[</highlight><highlight class="stringliteral">&apos;PWM&apos;</highlight><highlight class="normal">])],</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;E1&apos;</highlight><highlight class="normal">:<sp/>[ascii.convert_numpy(self.<ref refid="classpanoptes_1_1weather_1_1_weather_station_1_1_weather_station_1a1e6f7f3705494149bb3ad8df72ca0bd5" kindref="member">table_dtypes</ref>[</highlight><highlight class="stringliteral">&apos;E1&apos;</highlight><highlight class="normal">])],</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;E2&apos;</highlight><highlight class="normal">:<sp/>[ascii.convert_numpy(self.<ref refid="classpanoptes_1_1weather_1_1_weather_station_1_1_weather_station_1a1e6f7f3705494149bb3ad8df72ca0bd5" kindref="member">table_dtypes</ref>[</highlight><highlight class="stringliteral">&apos;E2&apos;</highlight><highlight class="normal">])],</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;E3&apos;</highlight><highlight class="normal">:<sp/>[ascii.convert_numpy(self.<ref refid="classpanoptes_1_1weather_1_1_weather_station_1_1_weather_station_1a1e6f7f3705494149bb3ad8df72ca0bd5" kindref="member">table_dtypes</ref>[</highlight><highlight class="stringliteral">&apos;E3&apos;</highlight><highlight class="normal">])],</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;E4&apos;</highlight><highlight class="normal">:<sp/>[ascii.convert_numpy(self.<ref refid="classpanoptes_1_1weather_1_1_weather_station_1_1_weather_station_1a1e6f7f3705494149bb3ad8df72ca0bd5" kindref="member">table_dtypes</ref>[</highlight><highlight class="stringliteral">&apos;E4&apos;</highlight><highlight class="normal">])],</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;Switch&apos;</highlight><highlight class="normal">:<sp/>[ascii.convert_numpy(self.<ref refid="classpanoptes_1_1weather_1_1_weather_station_1_1_weather_station_1a1e6f7f3705494149bb3ad8df72ca0bd5" kindref="member">table_dtypes</ref>[</highlight><highlight class="stringliteral">&apos;Switch&apos;</highlight><highlight class="normal">])]<sp/>}</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>telemetry</highlight></codeline>
<codeline lineno="491"><highlight class="normal"></highlight></codeline>
<codeline lineno="492"><highlight class="normal"></highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classpanoptes_1_1weather_1_1_a_a_g_cloud_sensor_1_1_a_a_g_cloud_sensor_1aa48bdb474bf8d98289ccd034e8660a08" kindref="member">update_telemetry_files</ref>(self):</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;&apos;&apos;</highlight></codeline>
<codeline lineno="495"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&apos;&apos;&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">##<sp/>First,<sp/>write<sp/>file<sp/>with<sp/>only<sp/>timestamp<sp/>and<sp/>SAFE/UNSAFE<sp/>condition</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>os.path.exists(self.<ref refid="classpanoptes_1_1weather_1_1_weather_station_1_1_weather_station_1ae8e6d0b84ea67809858520788c5a686f" kindref="member">condition_file</ref>):</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.logger.debug(</highlight><highlight class="stringliteral">&apos;Opening<sp/>prior<sp/>conditions<sp/>file:<sp/>{}&apos;</highlight><highlight class="normal">.format(self.<ref refid="classpanoptes_1_1weather_1_1_weather_station_1_1_weather_station_1ae8e6d0b84ea67809858520788c5a686f" kindref="member">condition_file</ref>))</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>conditions<sp/>=<sp/>ascii.read(self.<ref refid="classpanoptes_1_1weather_1_1_weather_station_1_1_weather_station_1ae8e6d0b84ea67809858520788c5a686f" kindref="member">condition_file</ref>,<sp/>guess=</highlight><highlight class="keyword">True</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>format=</highlight><highlight class="stringliteral">&apos;basic&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>converters={</highlight><highlight class="stringliteral">&apos;Timestamp&apos;</highlight><highlight class="normal">:<sp/>[ascii.convert_numpy(self.<ref refid="classpanoptes_1_1weather_1_1_weather_station_1_1_weather_station_1a1e6f7f3705494149bb3ad8df72ca0bd5" kindref="member">table_dtypes</ref>[</highlight><highlight class="stringliteral">&apos;Timestamp&apos;</highlight><highlight class="normal">])],</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;Safe&apos;</highlight><highlight class="normal">:<sp/>[ascii.convert_numpy(self.<ref refid="classpanoptes_1_1weather_1_1_weather_station_1_1_weather_station_1a1e6f7f3705494149bb3ad8df72ca0bd5" kindref="member">table_dtypes</ref>[</highlight><highlight class="stringliteral">&apos;Safe&apos;</highlight><highlight class="normal">])]}</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.logger.debug(</highlight><highlight class="stringliteral">&apos;No<sp/>prior<sp/>conditions<sp/>file<sp/>found.<sp/><sp/>Generating<sp/>new<sp/>table.&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>conditions<sp/>=<sp/>table.Table(names=(</highlight><highlight class="stringliteral">&apos;Timestamp&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;Safe&apos;</highlight><highlight class="normal">),<sp/>dtype=(self.<ref refid="classpanoptes_1_1weather_1_1_weather_station_1_1_weather_station_1a1e6f7f3705494149bb3ad8df72ca0bd5" kindref="member">table_dtypes</ref>[</highlight><highlight class="stringliteral">&apos;Timestamp&apos;</highlight><highlight class="normal">],<sp/>self.<ref refid="classpanoptes_1_1weather_1_1_weather_station_1_1_weather_station_1a1e6f7f3705494149bb3ad8df72ca0bd5" kindref="member">table_dtypes</ref>[</highlight><highlight class="stringliteral">&apos;Safe&apos;</highlight><highlight class="normal">]))</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>new_row<sp/>=<sp/>{</highlight><highlight class="stringliteral">&apos;Timestamp&apos;</highlight><highlight class="normal">:<sp/>self.last_update.strftime(</highlight><highlight class="stringliteral">&apos;%Y/%m/%d<sp/>%H:%M:%S<sp/>UT&apos;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;Safe&apos;</highlight><highlight class="normal">:<sp/>self.<ref refid="classpanoptes_1_1weather_1_1_a_a_g_cloud_sensor_1_1_a_a_g_cloud_sensor_1a29a0f584b72e853367d71dcfcd2e9b9c" kindref="member">safe</ref>}</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.logger.debug(</highlight><highlight class="stringliteral">&apos;Adding<sp/>new<sp/>row<sp/>to<sp/>table&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>conditions.add_row(new_row)</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.logger.debug(</highlight><highlight class="stringliteral">&apos;Writing<sp/>modified<sp/>table<sp/>to:<sp/>{}&apos;</highlight><highlight class="normal">.format(self.<ref refid="classpanoptes_1_1weather_1_1_weather_station_1_1_weather_station_1ae8e6d0b84ea67809858520788c5a686f" kindref="member">condition_file</ref>))</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ascii.write(conditions,<sp/>self.<ref refid="classpanoptes_1_1weather_1_1_weather_station_1_1_weather_station_1ae8e6d0b84ea67809858520788c5a686f" kindref="member">condition_file</ref>,<sp/>format=</highlight><highlight class="stringliteral">&apos;basic&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="513"><highlight class="normal"></highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">##<sp/>Second,<sp/>write<sp/>file<sp/>with<sp/>all<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>os.path.exists(self.<ref refid="classpanoptes_1_1weather_1_1_weather_station_1_1_weather_station_1a9d911806d6b9d3233c77c27804566f4c" kindref="member">telemetry_file</ref>):</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.logger.debug(</highlight><highlight class="stringliteral">&apos;Opening<sp/>prior<sp/>telemetry<sp/>file:<sp/>{}&apos;</highlight><highlight class="normal">.format(self.<ref refid="classpanoptes_1_1weather_1_1_weather_station_1_1_weather_station_1a9d911806d6b9d3233c77c27804566f4c" kindref="member">telemetry_file</ref>))</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>telemetry<sp/>=<sp/>self.<ref refid="classpanoptes_1_1weather_1_1_a_a_g_cloud_sensor_1_1_a_a_g_cloud_sensor_1a06aa5d9b85f18fcfe0113695a1e0c13d" kindref="member">read_AAG_telemetry</ref>()</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.logger.debug(</highlight><highlight class="stringliteral">&apos;No<sp/>prior<sp/>telemetry<sp/>file<sp/>found.<sp/><sp/>Generating<sp/>new<sp/>table.&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>telemetry<sp/>=<sp/>table.Table(names=(</highlight><highlight class="stringliteral">&apos;Timestamp&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;Safe&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;Ambient<sp/>Temperature&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;Sky<sp/>Temperature&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;Rain<sp/>Frequency&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;Wind<sp/>Speed&apos;</highlight><highlight class="normal">,<sp/></highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;Internal<sp/>Voltage&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;LDR<sp/>Resistance&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;Rain<sp/>Sensor<sp/>Temperature&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;PWM&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;E1&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;E2&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;E3&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;E4&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;Switch&apos;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dtype=(self.<ref refid="classpanoptes_1_1weather_1_1_weather_station_1_1_weather_station_1a1e6f7f3705494149bb3ad8df72ca0bd5" kindref="member">table_dtypes</ref>[</highlight><highlight class="stringliteral">&apos;Timestamp&apos;</highlight><highlight class="normal">],</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classpanoptes_1_1weather_1_1_weather_station_1_1_weather_station_1a1e6f7f3705494149bb3ad8df72ca0bd5" kindref="member">table_dtypes</ref>[</highlight><highlight class="stringliteral">&apos;Safe&apos;</highlight><highlight class="normal">],</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classpanoptes_1_1weather_1_1_weather_station_1_1_weather_station_1a1e6f7f3705494149bb3ad8df72ca0bd5" kindref="member">table_dtypes</ref>[</highlight><highlight class="stringliteral">&apos;Ambient<sp/>Temperature&apos;</highlight><highlight class="normal">],</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classpanoptes_1_1weather_1_1_weather_station_1_1_weather_station_1a1e6f7f3705494149bb3ad8df72ca0bd5" kindref="member">table_dtypes</ref>[</highlight><highlight class="stringliteral">&apos;Sky<sp/>Temperature&apos;</highlight><highlight class="normal">],</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classpanoptes_1_1weather_1_1_weather_station_1_1_weather_station_1a1e6f7f3705494149bb3ad8df72ca0bd5" kindref="member">table_dtypes</ref>[</highlight><highlight class="stringliteral">&apos;Rain<sp/>Frequency&apos;</highlight><highlight class="normal">],</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classpanoptes_1_1weather_1_1_weather_station_1_1_weather_station_1a1e6f7f3705494149bb3ad8df72ca0bd5" kindref="member">table_dtypes</ref>[</highlight><highlight class="stringliteral">&apos;Wind<sp/>Speed&apos;</highlight><highlight class="normal">],</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classpanoptes_1_1weather_1_1_weather_station_1_1_weather_station_1a1e6f7f3705494149bb3ad8df72ca0bd5" kindref="member">table_dtypes</ref>[</highlight><highlight class="stringliteral">&apos;Internal<sp/>Voltage&apos;</highlight><highlight class="normal">],</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classpanoptes_1_1weather_1_1_weather_station_1_1_weather_station_1a1e6f7f3705494149bb3ad8df72ca0bd5" kindref="member">table_dtypes</ref>[</highlight><highlight class="stringliteral">&apos;LDR<sp/>Resistance&apos;</highlight><highlight class="normal">],</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classpanoptes_1_1weather_1_1_weather_station_1_1_weather_station_1a1e6f7f3705494149bb3ad8df72ca0bd5" kindref="member">table_dtypes</ref>[</highlight><highlight class="stringliteral">&apos;Rain<sp/>Sensor<sp/>Temperature&apos;</highlight><highlight class="normal">],</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classpanoptes_1_1weather_1_1_weather_station_1_1_weather_station_1a1e6f7f3705494149bb3ad8df72ca0bd5" kindref="member">table_dtypes</ref>[</highlight><highlight class="stringliteral">&apos;PWM&apos;</highlight><highlight class="normal">],</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classpanoptes_1_1weather_1_1_weather_station_1_1_weather_station_1a1e6f7f3705494149bb3ad8df72ca0bd5" kindref="member">table_dtypes</ref>[</highlight><highlight class="stringliteral">&apos;E1&apos;</highlight><highlight class="normal">],</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classpanoptes_1_1weather_1_1_weather_station_1_1_weather_station_1a1e6f7f3705494149bb3ad8df72ca0bd5" kindref="member">table_dtypes</ref>[</highlight><highlight class="stringliteral">&apos;E2&apos;</highlight><highlight class="normal">],</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classpanoptes_1_1weather_1_1_weather_station_1_1_weather_station_1a1e6f7f3705494149bb3ad8df72ca0bd5" kindref="member">table_dtypes</ref>[</highlight><highlight class="stringliteral">&apos;E3&apos;</highlight><highlight class="normal">],</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classpanoptes_1_1weather_1_1_weather_station_1_1_weather_station_1a1e6f7f3705494149bb3ad8df72ca0bd5" kindref="member">table_dtypes</ref>[</highlight><highlight class="stringliteral">&apos;E4&apos;</highlight><highlight class="normal">],</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classpanoptes_1_1weather_1_1_weather_station_1_1_weather_station_1a1e6f7f3705494149bb3ad8df72ca0bd5" kindref="member">table_dtypes</ref>[</highlight><highlight class="stringliteral">&apos;Switch&apos;</highlight><highlight class="normal">])</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>new_row<sp/>=<sp/>{</highlight><highlight class="stringliteral">&apos;Timestamp&apos;</highlight><highlight class="normal">:<sp/>self.last_update.strftime(</highlight><highlight class="stringliteral">&apos;%Y/%m/%d<sp/>%H:%M:%S<sp/>UT&apos;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;Safe&apos;</highlight><highlight class="normal">:<sp/>self.<ref refid="classpanoptes_1_1weather_1_1_a_a_g_cloud_sensor_1_1_a_a_g_cloud_sensor_1a29a0f584b72e853367d71dcfcd2e9b9c" kindref="member">safe</ref>,</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;Ambient<sp/>Temperature&apos;</highlight><highlight class="normal">:<sp/>self.ambient_temp.value,</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;Sky<sp/>Temperature&apos;</highlight><highlight class="normal">:<sp/>self.sky_temp.value,</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;Rain<sp/>Frequency&apos;</highlight><highlight class="normal">:<sp/>self.<ref refid="classpanoptes_1_1weather_1_1_a_a_g_cloud_sensor_1_1_a_a_g_cloud_sensor_1a3d4b05ea3ee4a3f733ab1883d59e6234" kindref="member">rain_frequency</ref>,</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;Wind<sp/>Speed&apos;</highlight><highlight class="normal">:<sp/>self.wind_speed.value,</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;Internal<sp/>Voltage&apos;</highlight><highlight class="normal">:<sp/>self.internal_voltage.value,</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;LDR<sp/>Resistance&apos;</highlight><highlight class="normal">:<sp/>self.LDR_resistance.value,</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;Rain<sp/>Sensor<sp/>Temperature&apos;</highlight><highlight class="normal">:<sp/>self.rain_sensor_temp.value,</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;PWM&apos;</highlight><highlight class="normal">:<sp/>self.<ref refid="classpanoptes_1_1weather_1_1_a_a_g_cloud_sensor_1_1_a_a_g_cloud_sensor_1ab72bad416c3868dfd79266d30a496f4f" kindref="member">PWM</ref>,</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;E1&apos;</highlight><highlight class="normal">:<sp/>self.<ref refid="classpanoptes_1_1weather_1_1_a_a_g_cloud_sensor_1_1_a_a_g_cloud_sensor_1a75cf2248fd7093fec07e6bd2d706c97e" kindref="member">errors</ref>[</highlight><highlight class="stringliteral">&apos;!E1&apos;</highlight><highlight class="normal">],</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;E2&apos;</highlight><highlight class="normal">:<sp/>self.<ref refid="classpanoptes_1_1weather_1_1_a_a_g_cloud_sensor_1_1_a_a_g_cloud_sensor_1a75cf2248fd7093fec07e6bd2d706c97e" kindref="member">errors</ref>[</highlight><highlight class="stringliteral">&apos;!E2&apos;</highlight><highlight class="normal">],</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;E3&apos;</highlight><highlight class="normal">:<sp/>self.<ref refid="classpanoptes_1_1weather_1_1_a_a_g_cloud_sensor_1_1_a_a_g_cloud_sensor_1a75cf2248fd7093fec07e6bd2d706c97e" kindref="member">errors</ref>[</highlight><highlight class="stringliteral">&apos;!E3&apos;</highlight><highlight class="normal">],</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;E4&apos;</highlight><highlight class="normal">:<sp/>self.<ref refid="classpanoptes_1_1weather_1_1_a_a_g_cloud_sensor_1_1_a_a_g_cloud_sensor_1a75cf2248fd7093fec07e6bd2d706c97e" kindref="member">errors</ref>[</highlight><highlight class="stringliteral">&apos;!E4&apos;</highlight><highlight class="normal">],</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;Switch&apos;</highlight><highlight class="normal">:<sp/>self.<ref refid="classpanoptes_1_1weather_1_1_a_a_g_cloud_sensor_1_1_a_a_g_cloud_sensor_1a52ec177fe086c3c2742a67b921e6350c" kindref="member">switch</ref>}</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.logger.debug(</highlight><highlight class="stringliteral">&apos;Adding<sp/>new<sp/>row<sp/>to<sp/>table&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>telemetry.add_row(new_row)</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.logger.debug(</highlight><highlight class="stringliteral">&apos;Writing<sp/>modified<sp/>table<sp/>to:<sp/>{}&apos;</highlight><highlight class="normal">.format(self.<ref refid="classpanoptes_1_1weather_1_1_weather_station_1_1_weather_station_1a9d911806d6b9d3233c77c27804566f4c" kindref="member">telemetry_file</ref>))</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ascii.write(telemetry,<sp/>self.<ref refid="classpanoptes_1_1weather_1_1_weather_station_1_1_weather_station_1a9d911806d6b9d3233c77c27804566f4c" kindref="member">telemetry_file</ref>,<sp/>format=</highlight><highlight class="stringliteral">&apos;basic&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="559"><highlight class="normal"></highlight></codeline>
<codeline lineno="560"><highlight class="normal"></highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classpanoptes_1_1weather_1_1_a_a_g_cloud_sensor_1_1_a_a_g_cloud_sensor_1a1c0905b10a45df4de5a146d1313ad69c" kindref="member">make_safety_decision</ref>(self):</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;&apos;&apos;</highlight></codeline>
<codeline lineno="563"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Method<sp/>makes<sp/>decision<sp/>whether<sp/>conditions<sp/>are<sp/>safe<sp/>or<sp/>unsafe.</highlight></codeline>
<codeline lineno="564"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&apos;&apos;&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classpanoptes_1_1weather_1_1_a_a_g_cloud_sensor_1_1_a_a_g_cloud_sensor_1a29a0f584b72e853367d71dcfcd2e9b9c" kindref="member">safe</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&apos;UNSAFE&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="566"><highlight class="normal"></highlight></codeline>
<codeline lineno="567"><highlight class="normal"></highlight></codeline>
<codeline lineno="568"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacepanoptes_1_1weather_1_1_a_a_g_cloud_sensor_1a0df4126cd58e07478578eb6fdf4d9eba" kindref="member">decimal_hours</ref>(DTO):</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">assert</highlight><highlight class="normal"><sp/><ref refid="namespacepanoptes_1_1weather_1_1_a_a_g_cloud_sensor_1ad896609a36b9eff189c346be4e1ce0cd" kindref="member">type</ref>(DTO)<sp/>==<sp/>datetime.datetime</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/>decimal<sp/>=<sp/>DTO.hour<sp/>+<sp/>DTO.minute/60.<sp/>+<sp/>DTO.second/3600.</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>decimal</highlight></codeline>
<codeline lineno="572"><highlight class="normal"></highlight></codeline>
<codeline lineno="573"><highlight class="normal"></highlight></codeline>
<codeline lineno="574"><highlight class="normal"></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>__name__<sp/>==<sp/></highlight><highlight class="stringliteral">&apos;__main__&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">##-------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">##<sp/>Parse<sp/>Command<sp/>Line<sp/>Arguments</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">##-------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">##<sp/>create<sp/>a<sp/>parser<sp/>object<sp/>for<sp/>understanding<sp/>command-line<sp/>arguments</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/>parser<sp/>=<sp/>argparse.ArgumentParser(</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>description=</highlight><highlight class="stringliteral">&quot;Program<sp/>description.&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">##<sp/>add<sp/>flags</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/>parser.add_argument(</highlight><highlight class="stringliteral">&quot;-p&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;--plot&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>action=</highlight><highlight class="stringliteral">&quot;store_true&quot;</highlight><highlight class="normal">,<sp/>dest=</highlight><highlight class="stringliteral">&quot;plot&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>default=</highlight><highlight class="keyword">False</highlight><highlight class="normal">,<sp/>help=</highlight><highlight class="stringliteral">&quot;Plot<sp/>the<sp/>data<sp/>instead<sp/>of<sp/>querying<sp/>new<sp/>values.&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">##<sp/>add<sp/>arguments</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/>parser.add_argument(</highlight><highlight class="stringliteral">&quot;-d&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;--date&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>type=str,<sp/>dest=</highlight><highlight class="stringliteral">&quot;plotdate&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>help=</highlight><highlight class="stringliteral">&quot;Date<sp/>to<sp/>plot&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/>args<sp/>=<sp/>parser.parse_args()</highlight></codeline>
<codeline lineno="590"><highlight class="normal"></highlight></codeline>
<codeline lineno="591"><highlight class="normal"></highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">##-------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">##<sp/>Update<sp/>Weather<sp/>Telemetry</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">##-------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>args.plot:</highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AAG<sp/>=<sp/><ref refid="classpanoptes_1_1weather_1_1_a_a_g_cloud_sensor_1_1_a_a_g_cloud_sensor" kindref="compound">AAGCloudSensor</ref>(serial_address=</highlight><highlight class="stringliteral">&apos;/dev/ttyAMA0&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AAG.update_weather()</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AAG.logger.info(</highlight><highlight class="stringliteral">&apos;Done.&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="599"><highlight class="normal"></highlight></codeline>
<codeline lineno="600"><highlight class="normal"></highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">##-------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">##<sp/>Make<sp/>Plots</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">##-------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>args.plot:</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>matplotlib.pyplot<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>pyplot</highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>ephem</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">##---------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">##<sp/>Read<sp/>Telemetry</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">##---------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dummyAAG<sp/>=<sp/><ref refid="classpanoptes_1_1weather_1_1_a_a_g_cloud_sensor_1_1_a_a_g_cloud_sensor" kindref="compound">AAGCloudSensor</ref>(serial_address=</highlight><highlight class="keywordtype">None</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>args.plotdate:</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DateString<sp/>=<sp/>datetime.datetime.utcnow().strftime(</highlight><highlight class="stringliteral">&apos;%Y%m%d&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DateString<sp/>=<sp/>args.plotdate</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dummyAAG.telemetry_file<sp/>=<sp/>os.path.join(</highlight><highlight class="stringliteral">&apos;/&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;var&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;log&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;PanoptesWeather&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;telemetry_{}UT.txt&apos;</highlight><highlight class="normal">.format(DateString))</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">assert</highlight><highlight class="normal"><sp/>os.path.exists(dummyAAG.telemetry_file)</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dummyAAG.logger.info(</highlight><highlight class="stringliteral">&apos;Reading<sp/>telemetry<sp/>for<sp/>{}&apos;</highlight><highlight class="normal">.format(DateString))</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>telemetry<sp/>=<sp/>dummyAAG.read_AAG_telemetry()</highlight></codeline>
<codeline lineno="619"><highlight class="normal"></highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>time_decimal<sp/>=<sp/>[<ref refid="namespacepanoptes_1_1weather_1_1_a_a_g_cloud_sensor_1a0df4126cd58e07478578eb6fdf4d9eba" kindref="member">decimal_hours</ref>(datetime.datetime.strptime(val.decode(</highlight><highlight class="stringliteral">&apos;utf-8&apos;</highlight><highlight class="normal">),<sp/></highlight><highlight class="stringliteral">&apos;%Y/%m/%d<sp/>%H:%M:%S<sp/>UT&apos;</highlight><highlight class="normal">))<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>val<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>telemetry[</highlight><highlight class="stringliteral">&apos;Timestamp&apos;</highlight><highlight class="normal">]]</highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>time_decimal_column<sp/>=<sp/>table.Column(name=</highlight><highlight class="stringliteral">&apos;hours&apos;</highlight><highlight class="normal">,<sp/>data=time_decimal)</highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>telemetry.add_column(time_decimal_column,<sp/>2)</highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dummyAAG.logger.debug(</highlight><highlight class="stringliteral">&apos;<sp/><sp/>Convert<sp/>temperatures<sp/>to<sp/>C<sp/>and<sp/>F&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ambient_temp_C<sp/>=<sp/>[val<sp/>-<sp/>273.15<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>val<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>telemetry[</highlight><highlight class="stringliteral">&apos;Ambient<sp/>Temperature&apos;</highlight><highlight class="normal">]]</highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>telemetry.add_column(table.Column(name=</highlight><highlight class="stringliteral">&apos;Ambient<sp/>Temperature<sp/>(C)&apos;</highlight><highlight class="normal">,<sp/>data=ambient_temp_C))</highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ambient_temp_F<sp/>=<sp/>[32.+(val<sp/>-<sp/>273.15)*1.8<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>val<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>telemetry[</highlight><highlight class="stringliteral">&apos;Ambient<sp/>Temperature&apos;</highlight><highlight class="normal">]]</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>telemetry.add_column(table.Column(name=</highlight><highlight class="stringliteral">&apos;Ambient<sp/>Temperature<sp/>(F)&apos;</highlight><highlight class="normal">,<sp/>data=ambient_temp_F))</highlight></codeline>
<codeline lineno="629"><highlight class="normal"></highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sky_temp_C<sp/>=<sp/>[val<sp/>-<sp/>273.15<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>val<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>telemetry[</highlight><highlight class="stringliteral">&apos;Sky<sp/>Temperature&apos;</highlight><highlight class="normal">]]</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>telemetry.add_column(table.Column(name=</highlight><highlight class="stringliteral">&apos;Sky<sp/>Temperature<sp/>(C)&apos;</highlight><highlight class="normal">,<sp/>data=sky_temp_C))</highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sky_temp_F<sp/>=<sp/>[32.+(val<sp/>-<sp/>273.15)*1.8<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>val<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>telemetry[</highlight><highlight class="stringliteral">&apos;Sky<sp/>Temperature&apos;</highlight><highlight class="normal">]]</highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>telemetry.add_column(table.Column(name=</highlight><highlight class="stringliteral">&apos;Sky<sp/>Temperature<sp/>(F)&apos;</highlight><highlight class="normal">,<sp/>data=sky_temp_F))</highlight></codeline>
<codeline lineno="634"><highlight class="normal"></highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RST_C<sp/>=<sp/>[val<sp/>-<sp/>273.15<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>val<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>telemetry[</highlight><highlight class="stringliteral">&apos;Rain<sp/>Sensor<sp/>Temperature&apos;</highlight><highlight class="normal">]]</highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>telemetry.add_column(table.Column(name=</highlight><highlight class="stringliteral">&apos;Rain<sp/>Sensor<sp/>Temperature<sp/>(C)&apos;</highlight><highlight class="normal">,<sp/>data=RST_C))</highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RST_F<sp/>=<sp/>[32.+(val<sp/>-<sp/>273.15)*1.8<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>val<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>telemetry[</highlight><highlight class="stringliteral">&apos;Rain<sp/>Sensor<sp/>Temperature&apos;</highlight><highlight class="normal">]]</highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>telemetry.add_column(table.Column(name=</highlight><highlight class="stringliteral">&apos;Rain<sp/>Sensor<sp/>Temperature<sp/>(F)&apos;</highlight><highlight class="normal">,<sp/>data=RST_F))</highlight></codeline>
<codeline lineno="639"><highlight class="normal"></highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sky_difference_C<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sky_difference_F<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(0,len(telemetry[</highlight><highlight class="stringliteral">&apos;Ambient<sp/>Temperature<sp/>(C)&apos;</highlight><highlight class="normal">])):</highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>diff_C<sp/>=<sp/>telemetry[</highlight><highlight class="stringliteral">&apos;Sky<sp/>Temperature<sp/>(C)&apos;</highlight><highlight class="normal">][i]<sp/>-<sp/>telemetry[</highlight><highlight class="stringliteral">&apos;Ambient<sp/>Temperature<sp/>(C)&apos;</highlight><highlight class="normal">][i]</highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>diff_F<sp/>=<sp/>telemetry[</highlight><highlight class="stringliteral">&apos;Sky<sp/>Temperature<sp/>(F)&apos;</highlight><highlight class="normal">][i]<sp/>-<sp/>telemetry[</highlight><highlight class="stringliteral">&apos;Ambient<sp/>Temperature<sp/>(F)&apos;</highlight><highlight class="normal">][i]</highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sky_difference_C.append(diff_C)</highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sky_difference_F.append(diff_F)</highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>telemetry.add_column(table.Column(name=</highlight><highlight class="stringliteral">&apos;Sky<sp/>Difference<sp/>(C)&apos;</highlight><highlight class="normal">,<sp/>data=sky_difference_C))</highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>telemetry.add_column(table.Column(name=</highlight><highlight class="stringliteral">&apos;Sky<sp/>Difference<sp/>(F)&apos;</highlight><highlight class="normal">,<sp/>data=sky_difference_F))</highlight></codeline>
<codeline lineno="649"><highlight class="normal"></highlight></codeline>
<codeline lineno="650"><highlight class="normal"></highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">##---------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">##<sp/>Use<sp/>pyephem<sp/>determine<sp/>sunrise<sp/>and<sp/>sunset<sp/>times</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">##---------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dummyAAG.logger.debug(</highlight><highlight class="stringliteral">&apos;<sp/><sp/>Determine<sp/>sunrise<sp/>and<sp/>sunset<sp/>times&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Observatory<sp/>=<sp/>ephem.Observer()</highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Observatory.lon<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;-155:34:33.9&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Observatory.lat<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;+19:32:09.66&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Observatory.elevation<sp/>=<sp/>3400.0</highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Observatory.temp<sp/>=<sp/>10.0</highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Observatory.pressure<sp/>=<sp/>680.0</highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Observatory.date<sp/>=<sp/>DateString[0:4]+</highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal">+DateString[4:6]+</highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal">+DateString[6:8]+</highlight><highlight class="stringliteral">&quot;<sp/>10:00:00.0&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="662"><highlight class="normal"></highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Observatory.horizon<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;0.0&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SunsetTime<sp/><sp/>=<sp/>Observatory.previous_setting(ephem.Sun()).datetime()</highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SunriseTime<sp/>=<sp/>Observatory.next_rising(ephem.Sun()).datetime()</highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SunsetDecimal<sp/>=<sp/>float(datetime.datetime.strftime(SunsetTime,<sp/></highlight><highlight class="stringliteral">&quot;%H&quot;</highlight><highlight class="normal">))+float(datetime.datetime.strftime(SunsetTime,<sp/></highlight><highlight class="stringliteral">&quot;%M&quot;</highlight><highlight class="normal">))/60.+float(datetime.datetime.strftime(SunsetTime,<sp/></highlight><highlight class="stringliteral">&quot;%S&quot;</highlight><highlight class="normal">))/3600.</highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SunriseDecimal<sp/>=<sp/>float(datetime.datetime.strftime(SunriseTime,<sp/></highlight><highlight class="stringliteral">&quot;%H&quot;</highlight><highlight class="normal">))+float(datetime.datetime.strftime(SunriseTime,<sp/></highlight><highlight class="stringliteral">&quot;%M&quot;</highlight><highlight class="normal">))/60.+float(datetime.datetime.strftime(SunriseTime,<sp/></highlight><highlight class="stringliteral">&quot;%S&quot;</highlight><highlight class="normal">))/3600.</highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Observatory.horizon<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;-6.0&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EveningCivilTwilightTime<sp/>=<sp/>Observatory.previous_setting(ephem.Sun(),<sp/>use_center=</highlight><highlight class="keyword">True</highlight><highlight class="normal">).datetime()</highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MorningCivilTwilightTime<sp/>=<sp/>Observatory.next_rising(ephem.Sun(),<sp/>use_center=</highlight><highlight class="keyword">True</highlight><highlight class="normal">).datetime()</highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EveningCivilTwilightDecimal<sp/>=<sp/>float(datetime.datetime.strftime(EveningCivilTwilightTime,<sp/></highlight><highlight class="stringliteral">&quot;%H&quot;</highlight><highlight class="normal">))+float(datetime.datetime.strftime(EveningCivilTwilightTime,<sp/></highlight><highlight class="stringliteral">&quot;%M&quot;</highlight><highlight class="normal">))/60.+float(datetime.datetime.strftime(EveningCivilTwilightTime,<sp/></highlight><highlight class="stringliteral">&quot;%S&quot;</highlight><highlight class="normal">))/3600.</highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MorningCivilTwilightDecimal<sp/>=<sp/>float(datetime.datetime.strftime(MorningCivilTwilightTime,<sp/></highlight><highlight class="stringliteral">&quot;%H&quot;</highlight><highlight class="normal">))+float(datetime.datetime.strftime(MorningCivilTwilightTime,<sp/></highlight><highlight class="stringliteral">&quot;%M&quot;</highlight><highlight class="normal">))/60.+float(datetime.datetime.strftime(MorningCivilTwilightTime,<sp/></highlight><highlight class="stringliteral">&quot;%S&quot;</highlight><highlight class="normal">))/3600.</highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Observatory.horizon<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;-12.0&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EveningNauticalTwilightTime<sp/>=<sp/>Observatory.previous_setting(ephem.Sun(),<sp/>use_center=</highlight><highlight class="keyword">True</highlight><highlight class="normal">).datetime()</highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MorningNauticalTwilightTime<sp/>=<sp/>Observatory.next_rising(ephem.Sun(),<sp/>use_center=</highlight><highlight class="keyword">True</highlight><highlight class="normal">).datetime()</highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EveningNauticalTwilightDecimal<sp/>=<sp/>float(datetime.datetime.strftime(EveningNauticalTwilightTime,<sp/></highlight><highlight class="stringliteral">&quot;%H&quot;</highlight><highlight class="normal">))+float(datetime.datetime.strftime(EveningNauticalTwilightTime,<sp/></highlight><highlight class="stringliteral">&quot;%M&quot;</highlight><highlight class="normal">))/60.+float(datetime.datetime.strftime(EveningNauticalTwilightTime,<sp/></highlight><highlight class="stringliteral">&quot;%S&quot;</highlight><highlight class="normal">))/3600.</highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MorningNauticalTwilightDecimal<sp/>=<sp/>float(datetime.datetime.strftime(MorningNauticalTwilightTime,<sp/></highlight><highlight class="stringliteral">&quot;%H&quot;</highlight><highlight class="normal">))+float(datetime.datetime.strftime(MorningNauticalTwilightTime,<sp/></highlight><highlight class="stringliteral">&quot;%M&quot;</highlight><highlight class="normal">))/60.+float(datetime.datetime.strftime(MorningNauticalTwilightTime,<sp/></highlight><highlight class="stringliteral">&quot;%S&quot;</highlight><highlight class="normal">))/3600.</highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Observatory.horizon<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;-18.0&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EveningAstronomicalTwilightTime<sp/>=<sp/>Observatory.previous_setting(ephem.Sun(),<sp/>use_center=</highlight><highlight class="keyword">True</highlight><highlight class="normal">).datetime()</highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MorningAstronomicalTwilightTime<sp/>=<sp/>Observatory.next_rising(ephem.Sun(),<sp/>use_center=</highlight><highlight class="keyword">True</highlight><highlight class="normal">).datetime()</highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EveningAstronomicalTwilightDecimal<sp/>=<sp/>float(datetime.datetime.strftime(EveningAstronomicalTwilightTime,<sp/></highlight><highlight class="stringliteral">&quot;%H&quot;</highlight><highlight class="normal">))+float(datetime.datetime.strftime(EveningAstronomicalTwilightTime,<sp/></highlight><highlight class="stringliteral">&quot;%M&quot;</highlight><highlight class="normal">))/60.+float(datetime.datetime.strftime(EveningAstronomicalTwilightTime,<sp/></highlight><highlight class="stringliteral">&quot;%S&quot;</highlight><highlight class="normal">))/3600.</highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MorningAstronomicalTwilightDecimal<sp/>=<sp/>float(datetime.datetime.strftime(MorningAstronomicalTwilightTime,<sp/></highlight><highlight class="stringliteral">&quot;%H&quot;</highlight><highlight class="normal">))+float(datetime.datetime.strftime(MorningAstronomicalTwilightTime,<sp/></highlight><highlight class="stringliteral">&quot;%M&quot;</highlight><highlight class="normal">))/60.+float(datetime.datetime.strftime(MorningAstronomicalTwilightTime,<sp/></highlight><highlight class="stringliteral">&quot;%S&quot;</highlight><highlight class="normal">))/3600.</highlight></codeline>
<codeline lineno="683"><highlight class="normal"></highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dummyAAG.logger.debug(</highlight><highlight class="stringliteral">&apos;<sp/><sp/>Determine<sp/>moon<sp/>altitude<sp/>values&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Observatory.date<sp/>=<sp/>DateString[0:4]+</highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal">+DateString[4:6]+</highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal">+DateString[6:8]+</highlight><highlight class="stringliteral">&quot;<sp/>0:00:01.0&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TheMoon<sp/>=<sp/>ephem.Moon()</highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TheMoon.compute(Observatory)</highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MoonsetTime<sp/><sp/>=<sp/>Observatory.next_setting(ephem.Moon()).datetime()</highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MoonriseTime<sp/>=<sp/>Observatory.next_rising(ephem.Moon()).datetime()</highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MoonsetDecimal<sp/>=<sp/>float(datetime.datetime.strftime(MoonsetTime,<sp/></highlight><highlight class="stringliteral">&quot;%H&quot;</highlight><highlight class="normal">))+float(datetime.datetime.strftime(MoonsetTime,<sp/></highlight><highlight class="stringliteral">&quot;%M&quot;</highlight><highlight class="normal">))/60.+float(datetime.datetime.strftime(MoonsetTime,<sp/></highlight><highlight class="stringliteral">&quot;%S&quot;</highlight><highlight class="normal">))/3600.</highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MoonriseDecimal<sp/>=<sp/>float(datetime.datetime.strftime(MoonriseTime,<sp/></highlight><highlight class="stringliteral">&quot;%H&quot;</highlight><highlight class="normal">))+float(datetime.datetime.strftime(MoonriseTime,<sp/></highlight><highlight class="stringliteral">&quot;%M&quot;</highlight><highlight class="normal">))/60.+float(datetime.datetime.strftime(MoonriseTime,<sp/></highlight><highlight class="stringliteral">&quot;%S&quot;</highlight><highlight class="normal">))/3600.<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="692"><highlight class="normal"></highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MoonTimes<sp/>=<sp/>np.arange(0,24,0.1)</highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MoonAlts<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>MoonTime<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>MoonTimes:</highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TimeString<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;%02d:%02d:%04.1f&quot;</highlight><highlight class="normal"><sp/>%<sp/>(math.floor(MoonTime),<sp/>math.floor((MoonTime<sp/>%<sp/>1)*60),<sp/>((MoonTime<sp/>%<sp/>1<sp/>*<sp/>60)<sp/>%<sp/>1)*60.0)</highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Observatory.date<sp/>=<sp/>DateString[0:4]+</highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal">+DateString[4:6]+</highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal">+DateString[6:8]+</highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">+TimeString</highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TheMoon.compute(Observatory)</highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MoonAlts.append(TheMoon.alt<sp/>*<sp/>180.<sp/>/<sp/>ephem.pi)</highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MoonAlts<sp/>=<sp/>np.array(MoonAlts)</highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MoonPeakAlt<sp/>=<sp/>max(MoonAlts)</highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MoonPeakTime<sp/>=<sp/>(MoonTimes[(MoonAlts<sp/>==<sp/>MoonPeakAlt)])[0]</highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MoonPeakTimeString<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;%02d:%02d:%04.1f&quot;</highlight><highlight class="normal"><sp/>%<sp/>(math.floor(MoonPeakTime),<sp/>math.floor((MoonPeakTime<sp/>%<sp/>1)*60),<sp/>((MoonPeakTime<sp/>%<sp/>1<sp/>*<sp/>60)<sp/>%<sp/>1)*60.0)</highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Observatory.date<sp/>=<sp/>DateString[0:4]+</highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal">+DateString[4:6]+</highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal">+DateString[6:8]+</highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">+MoonPeakTimeString</highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TheMoon.compute(Observatory)</highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MoonPhase<sp/>=<sp/>TheMoon.phase</highlight></codeline>
<codeline lineno="708"><highlight class="normal"></highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MoonFill<sp/>=<sp/>MoonPhase/100.*0.5+0.05</highlight></codeline>
<codeline lineno="710"><highlight class="normal"></highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">##---------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">##<sp/>Make<sp/>Plot<sp/>of<sp/>Entire<sp/>UT<sp/>Day</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">##---------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dummyAAG.logger.debug(</highlight><highlight class="stringliteral">&apos;<sp/><sp/>Generate<sp/>temperature<sp/>plot&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PlotFile<sp/>=<sp/>os.path.join(</highlight><highlight class="stringliteral">&apos;/&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;var&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;log&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;PanoptesWeather&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;weather_{}UT.png&apos;</highlight><highlight class="normal">.format(DateString))</highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dpi=100</highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pyplot.ioff()</highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Figure<sp/>=<sp/>pyplot.figure(figsize=(13,9.5),<sp/>dpi=dpi)</highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PlotStartUT<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PlotEndUT<sp/>=<sp/>24</highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nUTHours<sp/>=<sp/>25</highlight></codeline>
<codeline lineno="722"><highlight class="normal"></highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">##<sp/>Plot<sp/>Positions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>width<sp/>=<sp/>1.000</highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>height<sp/>=<sp/>0.230</highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vspace<sp/>=<sp/>0.015</highlight></codeline>
<codeline lineno="727"><highlight class="normal"></highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">##---------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">##<sp/>Temperatures</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">##---------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nplots<sp/>=<sp/>1</highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TemperatureAxes<sp/>=<sp/>pyplot.axes([0.0,<sp/>1.0-nplots*height,<sp/>1.0,<sp/>height],<sp/>xticklabels=[])</highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pyplot.plot(telemetry[</highlight><highlight class="stringliteral">&apos;hours&apos;</highlight><highlight class="normal">],<sp/>telemetry[</highlight><highlight class="stringliteral">&apos;Ambient<sp/>Temperature<sp/>(F)&apos;</highlight><highlight class="normal">],<sp/></highlight><highlight class="stringliteral">&apos;ko-&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>alpha=1.0,<sp/>markersize=2,<sp/>markeredgewidth=0)</highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pyplot.plot(telemetry[</highlight><highlight class="stringliteral">&apos;hours&apos;</highlight><highlight class="normal">],<sp/>telemetry[</highlight><highlight class="stringliteral">&apos;Rain<sp/>Sensor<sp/>Temperature<sp/>(F)&apos;</highlight><highlight class="normal">],<sp/></highlight><highlight class="stringliteral">&apos;ro-&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>alpha=0.4,<sp/>markersize=2,<sp/>markeredgewidth=0)</highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pyplot.title(</highlight><highlight class="stringliteral">&apos;Weather<sp/>Data<sp/>for<sp/>{}/{}/{}<sp/>UT&apos;</highlight><highlight class="normal">.format(DateString[0:4],<sp/>DateString[4:6],<sp/>DateString[6:8]))</highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pyplot.ylabel(</highlight><highlight class="stringliteral">&quot;Temperature<sp/>(F)&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pyplot.xticks(np.linspace(PlotStartUT,PlotEndUT,nUTHours,endpoint=</highlight><highlight class="keyword">True</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pyplot.xlim(PlotStartUT,PlotEndUT)</highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pyplot.grid()</highlight></codeline>
<codeline lineno="742"><highlight class="normal"></highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pyplot.yticks(np.linspace(0,120,13,endpoint=</highlight><highlight class="keyword">True</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pyplot.ylim(min(telemetry[</highlight><highlight class="stringliteral">&apos;Ambient<sp/>Temperature<sp/>(F)&apos;</highlight><highlight class="normal">])-5,<sp/>max(telemetry[</highlight><highlight class="stringliteral">&apos;Ambient<sp/>Temperature<sp/>(F)&apos;</highlight><highlight class="normal">])+5)</highlight></codeline>
<codeline lineno="745"><highlight class="normal"></highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">##<sp/>Overplot<sp/>Twilights</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pyplot.axvspan(SunsetDecimal,<sp/>EveningCivilTwilightDecimal,<sp/>ymin=0,<sp/>ymax=1,<sp/>color=</highlight><highlight class="stringliteral">&apos;blue&apos;</highlight><highlight class="normal">,<sp/>alpha=0.1)</highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pyplot.axvspan(EveningCivilTwilightDecimal,<sp/>EveningNauticalTwilightDecimal,<sp/>ymin=0,<sp/>ymax=1,<sp/>color=</highlight><highlight class="stringliteral">&apos;blue&apos;</highlight><highlight class="normal">,<sp/>alpha=0.2)</highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pyplot.axvspan(EveningNauticalTwilightDecimal,<sp/>EveningAstronomicalTwilightDecimal,<sp/>ymin=0,<sp/>ymax=1,<sp/>color=</highlight><highlight class="stringliteral">&apos;blue&apos;</highlight><highlight class="normal">,<sp/>alpha=0.3)</highlight></codeline>
<codeline lineno="750"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pyplot.axvspan(EveningAstronomicalTwilightDecimal,<sp/>MorningAstronomicalTwilightDecimal,<sp/>ymin=0,<sp/>ymax=1,<sp/>color=</highlight><highlight class="stringliteral">&apos;blue&apos;</highlight><highlight class="normal">,<sp/>alpha=0.5)</highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pyplot.axvspan(MorningAstronomicalTwilightDecimal,<sp/>MorningNauticalTwilightDecimal,<sp/>ymin=0,<sp/>ymax=1,<sp/>color=</highlight><highlight class="stringliteral">&apos;blue&apos;</highlight><highlight class="normal">,<sp/>alpha=0.3)</highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pyplot.axvspan(MorningNauticalTwilightDecimal,<sp/>MorningCivilTwilightDecimal,<sp/>ymin=0,<sp/>ymax=1,<sp/>color=</highlight><highlight class="stringliteral">&apos;blue&apos;</highlight><highlight class="normal">,<sp/>alpha=0.2)</highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pyplot.axvspan(MorningCivilTwilightDecimal,<sp/>SunriseDecimal,<sp/>ymin=0,<sp/>ymax=1,<sp/>color=</highlight><highlight class="stringliteral">&apos;blue&apos;</highlight><highlight class="normal">,<sp/>alpha=0.1)</highlight></codeline>
<codeline lineno="754"><highlight class="normal"></highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">##<sp/>Overplot<sp/>Moon<sp/>Up<sp/>Time</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MoonAxes<sp/>=<sp/>TemperatureAxes.twinx()</highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MoonAxes.set_ylabel(</highlight><highlight class="stringliteral">&apos;Moon<sp/>Alt<sp/>(%.0f%%<sp/>full)&apos;</highlight><highlight class="normal"><sp/>%<sp/>MoonPhase,<sp/>color=</highlight><highlight class="stringliteral">&apos;y&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pyplot.plot(MoonTimes,<sp/>MoonAlts,<sp/></highlight><highlight class="stringliteral">&apos;y-&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pyplot.ylim(0,100)</highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pyplot.yticks([10,30,50,70,90],<sp/>color=</highlight><highlight class="stringliteral">&apos;y&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pyplot.xticks(np.linspace(PlotStartUT,PlotEndUT,nUTHours,endpoint=</highlight><highlight class="keyword">True</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pyplot.xlim(PlotStartUT,PlotEndUT)</highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pyplot.fill_between(MoonTimes,<sp/>0,<sp/>MoonAlts,<sp/>where=MoonAlts&gt;0,<sp/>color=</highlight><highlight class="stringliteral">&apos;yellow&apos;</highlight><highlight class="normal">,<sp/>alpha=MoonFill)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="764"><highlight class="normal"></highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">##---------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">##<sp/>Cloudiness</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">##---------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nplots<sp/>+=<sp/>1</highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CloudinessAxes<sp/>=<sp/>pyplot.axes([0.0,<sp/>1.0-height*nplots-vspace*(nplots-1),<sp/>1.0,<sp/>height],<sp/>xticklabels=[])</highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pyplot.plot(telemetry[</highlight><highlight class="stringliteral">&apos;hours&apos;</highlight><highlight class="normal">],<sp/>telemetry[</highlight><highlight class="stringliteral">&apos;Sky<sp/>Difference<sp/>(F)&apos;</highlight><highlight class="normal">],<sp/></highlight><highlight class="stringliteral">&apos;ko-&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>alpha=1.0,<sp/>markersize=2,<sp/>markeredgewidth=0)</highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pyplot.ylabel(</highlight><highlight class="stringliteral">&quot;Sky<sp/>Difference<sp/>(F)&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="773"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pyplot.xticks(np.linspace(PlotStartUT,PlotEndUT,nUTHours,endpoint=</highlight><highlight class="keyword">True</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="774"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pyplot.xlim(PlotStartUT,PlotEndUT)</highlight></codeline>
<codeline lineno="775"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pyplot.grid()</highlight></codeline>
<codeline lineno="776"><highlight class="normal"></highlight></codeline>
<codeline lineno="777"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pyplot.yticks(np.linspace(-100,0,21,endpoint=</highlight><highlight class="keyword">True</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pyplot.ylim(min(telemetry[</highlight><highlight class="stringliteral">&apos;Sky<sp/>Difference<sp/>(F)&apos;</highlight><highlight class="normal">])-5,<sp/>+5)</highlight></codeline>
<codeline lineno="779"><highlight class="normal"></highlight></codeline>
<codeline lineno="780"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">##<sp/>Overplot<sp/>Twilights</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="781"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pyplot.axvspan(SunsetDecimal,<sp/>EveningCivilTwilightDecimal,<sp/>ymin=0,<sp/>ymax=1,<sp/>color=</highlight><highlight class="stringliteral">&apos;blue&apos;</highlight><highlight class="normal">,<sp/>alpha=0.1)</highlight></codeline>
<codeline lineno="782"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pyplot.axvspan(EveningCivilTwilightDecimal,<sp/>EveningNauticalTwilightDecimal,<sp/>ymin=0,<sp/>ymax=1,<sp/>color=</highlight><highlight class="stringliteral">&apos;blue&apos;</highlight><highlight class="normal">,<sp/>alpha=0.2)</highlight></codeline>
<codeline lineno="783"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pyplot.axvspan(EveningNauticalTwilightDecimal,<sp/>EveningAstronomicalTwilightDecimal,<sp/>ymin=0,<sp/>ymax=1,<sp/>color=</highlight><highlight class="stringliteral">&apos;blue&apos;</highlight><highlight class="normal">,<sp/>alpha=0.3)</highlight></codeline>
<codeline lineno="784"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pyplot.axvspan(EveningAstronomicalTwilightDecimal,<sp/>MorningAstronomicalTwilightDecimal,<sp/>ymin=0,<sp/>ymax=1,<sp/>color=</highlight><highlight class="stringliteral">&apos;blue&apos;</highlight><highlight class="normal">,<sp/>alpha=0.5)</highlight></codeline>
<codeline lineno="785"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pyplot.axvspan(MorningAstronomicalTwilightDecimal,<sp/>MorningNauticalTwilightDecimal,<sp/>ymin=0,<sp/>ymax=1,<sp/>color=</highlight><highlight class="stringliteral">&apos;blue&apos;</highlight><highlight class="normal">,<sp/>alpha=0.3)</highlight></codeline>
<codeline lineno="786"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pyplot.axvspan(MorningNauticalTwilightDecimal,<sp/>MorningCivilTwilightDecimal,<sp/>ymin=0,<sp/>ymax=1,<sp/>color=</highlight><highlight class="stringliteral">&apos;blue&apos;</highlight><highlight class="normal">,<sp/>alpha=0.2)</highlight></codeline>
<codeline lineno="787"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pyplot.axvspan(MorningCivilTwilightDecimal,<sp/>SunriseDecimal,<sp/>ymin=0,<sp/>ymax=1,<sp/>color=</highlight><highlight class="stringliteral">&apos;blue&apos;</highlight><highlight class="normal">,<sp/>alpha=0.1)</highlight></codeline>
<codeline lineno="788"><highlight class="normal"></highlight></codeline>
<codeline lineno="789"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">##<sp/>Overplot<sp/>Moon<sp/>Up<sp/>Time</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="790"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MoonAxes<sp/>=<sp/>TemperatureAxes.twinx()</highlight></codeline>
<codeline lineno="791"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MoonAxes.set_ylabel(</highlight><highlight class="stringliteral">&apos;Moon<sp/>Alt<sp/>(%.0f%%<sp/>full)&apos;</highlight><highlight class="normal"><sp/>%<sp/>MoonPhase,<sp/>color=</highlight><highlight class="stringliteral">&apos;y&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="792"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pyplot.plot(MoonTimes,<sp/>MoonAlts,<sp/></highlight><highlight class="stringliteral">&apos;y-&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="793"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pyplot.ylim(0,100)</highlight></codeline>
<codeline lineno="794"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pyplot.yticks([10,30,50,70,90],<sp/>color=</highlight><highlight class="stringliteral">&apos;y&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="795"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pyplot.xticks(np.linspace(PlotStartUT,PlotEndUT,nUTHours,endpoint=</highlight><highlight class="keyword">True</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="796"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pyplot.xlim(PlotStartUT,PlotEndUT)</highlight></codeline>
<codeline lineno="797"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pyplot.fill_between(MoonTimes,<sp/>0,<sp/>MoonAlts,<sp/>where=MoonAlts&gt;0,<sp/>color=</highlight><highlight class="stringliteral">&apos;yellow&apos;</highlight><highlight class="normal">,<sp/>alpha=MoonFill)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="798"><highlight class="normal"></highlight></codeline>
<codeline lineno="799"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">##---------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="800"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">##<sp/>Wind</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="801"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">##---------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="802"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nplots<sp/>+=<sp/>1</highlight></codeline>
<codeline lineno="803"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WindAxes<sp/>=<sp/>pyplot.axes([0.0,<sp/>1.0-height*nplots-vspace*(nplots-1),<sp/>1.0,<sp/>height],<sp/>xticklabels=[])</highlight></codeline>
<codeline lineno="804"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pyplot.plot(telemetry[</highlight><highlight class="stringliteral">&apos;hours&apos;</highlight><highlight class="normal">],<sp/>telemetry[</highlight><highlight class="stringliteral">&apos;Wind<sp/>Speed&apos;</highlight><highlight class="normal">],<sp/></highlight><highlight class="stringliteral">&apos;ko-&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="805"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>alpha=1.0,<sp/>markersize=2,<sp/>markeredgewidth=0)</highlight></codeline>
<codeline lineno="806"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pyplot.ylabel(</highlight><highlight class="stringliteral">&quot;Wind<sp/>Speed<sp/>(km/h)&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="807"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pyplot.xticks(np.linspace(PlotStartUT,PlotEndUT,nUTHours,endpoint=</highlight><highlight class="keyword">True</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="808"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pyplot.xlim(PlotStartUT,PlotEndUT)</highlight></codeline>
<codeline lineno="809"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pyplot.grid()</highlight></codeline>
<codeline lineno="810"><highlight class="normal"></highlight></codeline>
<codeline lineno="811"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pyplot.yticks(np.linspace(0,100,21,endpoint=</highlight><highlight class="keyword">True</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="812"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pyplot.ylim(0,<sp/>max([20,<sp/>max(telemetry[</highlight><highlight class="stringliteral">&apos;Wind<sp/>Speed&apos;</highlight><highlight class="normal">])+5]))</highlight></codeline>
<codeline lineno="813"><highlight class="normal"></highlight></codeline>
<codeline lineno="814"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">##---------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="815"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">##<sp/>Rain</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="816"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">##---------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="817"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nplots<sp/>+=<sp/>1</highlight></codeline>
<codeline lineno="818"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print([0.0,<sp/>1.0-height*nplots-vspace*(nplots-1),<sp/>1.0,<sp/>height])</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="819"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RainAxes<sp/>=<sp/>pyplot.axes([0.0,<sp/>1.0-height*nplots-vspace*(nplots-1),<sp/>1.00,<sp/>height])</highlight></codeline>
<codeline lineno="820"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pyplot.plot(telemetry[</highlight><highlight class="stringliteral">&apos;hours&apos;</highlight><highlight class="normal">],<sp/>telemetry[</highlight><highlight class="stringliteral">&apos;LDR<sp/>Resistance&apos;</highlight><highlight class="normal">]/1000.,<sp/></highlight><highlight class="stringliteral">&apos;bo-&apos;</highlight><highlight class="normal">,<sp/>label=</highlight><highlight class="stringliteral">&apos;LDR<sp/>Resistance&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="821"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>alpha=1.0,<sp/>markersize=2,<sp/>markeredgewidth=0)</highlight></codeline>
<codeline lineno="822"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pyplot.plot(telemetry[</highlight><highlight class="stringliteral">&apos;hours&apos;</highlight><highlight class="normal">],<sp/>telemetry[</highlight><highlight class="stringliteral">&apos;Rain<sp/>Frequency&apos;</highlight><highlight class="normal">]/1023.*100,<sp/></highlight><highlight class="stringliteral">&apos;ro-&apos;</highlight><highlight class="normal">,<sp/>label=</highlight><highlight class="stringliteral">&apos;Rain<sp/>Freq.<sp/>(%)&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="823"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>alpha=1.0,<sp/>markersize=2,<sp/>markeredgewidth=0)</highlight></codeline>
<codeline lineno="824"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pyplot.ylabel(</highlight><highlight class="stringliteral">&quot;Rain/Wetness&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="825"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pyplot.yticks(np.linspace(0,100,11,endpoint=</highlight><highlight class="keyword">True</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="826"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pyplot.ylim(0,<sp/>100)</highlight></codeline>
<codeline lineno="827"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pyplot.xticks(np.linspace(PlotStartUT,PlotEndUT,nUTHours,endpoint=</highlight><highlight class="keyword">True</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="828"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pyplot.xlim(PlotStartUT,PlotEndUT)</highlight></codeline>
<codeline lineno="829"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pyplot.grid()</highlight></codeline>
<codeline lineno="830"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pyplot.xlabel(</highlight><highlight class="stringliteral">&apos;Time<sp/>(UT<sp/>Hours)&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="831"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pyplot.legend(loc=</highlight><highlight class="stringliteral">&apos;best&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="832"><highlight class="normal"></highlight></codeline>
<codeline lineno="833"><highlight class="normal"></highlight></codeline>
<codeline lineno="834"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>##<sp/>Overplot<sp/>Twilights</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="835"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pyplot.axvspan(SunsetDecimal,<sp/>EveningCivilTwilightDecimal,<sp/>ymin=0,<sp/>ymax=1,<sp/>color=&apos;blue&apos;,<sp/>alpha=0.1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="836"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pyplot.axvspan(EveningCivilTwilightDecimal,<sp/>EveningNauticalTwilightDecimal,<sp/>ymin=0,<sp/>ymax=1,<sp/>color=&apos;blue&apos;,<sp/>alpha=0.2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="837"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pyplot.axvspan(EveningNauticalTwilightDecimal,<sp/>EveningAstronomicalTwilightDecimal,<sp/>ymin=0,<sp/>ymax=1,<sp/>color=&apos;blue&apos;,<sp/>alpha=0.3)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="838"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pyplot.axvspan(EveningAstronomicalTwilightDecimal,<sp/>MorningAstronomicalTwilightDecimal,<sp/>ymin=0,<sp/>ymax=1,<sp/>color=&apos;blue&apos;,<sp/>alpha=0.5)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="839"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pyplot.axvspan(MorningAstronomicalTwilightDecimal,<sp/>MorningNauticalTwilightDecimal,<sp/>ymin=0,<sp/>ymax=1,<sp/>color=&apos;blue&apos;,<sp/>alpha=0.3)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="840"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pyplot.axvspan(MorningNauticalTwilightDecimal,<sp/>MorningCivilTwilightDecimal,<sp/>ymin=0,<sp/>ymax=1,<sp/>color=&apos;blue&apos;,<sp/>alpha=0.2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="841"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pyplot.axvspan(MorningCivilTwilightDecimal,<sp/>SunriseDecimal,<sp/>ymin=0,<sp/>ymax=1,<sp/>color=&apos;blue&apos;,<sp/>alpha=0.1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="842"><highlight class="normal"></highlight><highlight class="comment">#<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="843"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>##<sp/>Overplot<sp/>Moon<sp/>Up<sp/>Time</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="844"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MoonAxes<sp/>=<sp/>TemperatureAxes.twinx()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="845"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MoonAxes.set_ylabel(&apos;Moon<sp/>Alt<sp/>(%.0f%%<sp/>full)&apos;<sp/>%<sp/>MoonPhase,<sp/>color=&apos;y&apos;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="846"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pyplot.plot(MoonTimes,<sp/>MoonAlts,<sp/>&apos;y-&apos;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="847"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pyplot.ylim(0,100)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="848"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pyplot.yticks([10,30,50,70,90],<sp/>color=&apos;y&apos;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="849"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pyplot.xticks(np.linspace(PlotStartUT,PlotEndUT,nUTHours,endpoint=True))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="850"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pyplot.xlim(PlotStartUT,PlotEndUT)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="851"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pyplot.fill_between(MoonTimes,<sp/>0,<sp/>MoonAlts,<sp/>where=MoonAlts&gt;0,<sp/>color=&apos;yellow&apos;,<sp/>alpha=MoonFill)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="852"><highlight class="normal"></highlight></codeline>
<codeline lineno="853"><highlight class="normal"></highlight></codeline>
<codeline lineno="854"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pyplot.savefig(PlotFile,<sp/>dpi=dpi,<sp/>bbox_inches=</highlight><highlight class="stringliteral">&apos;tight&apos;</highlight><highlight class="normal">,<sp/>pad_inches=0.10)</highlight></codeline>
<codeline lineno="855"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dummyAAG.logger.info(</highlight><highlight class="stringliteral">&apos;<sp/><sp/>Done&apos;</highlight><highlight class="normal">)</highlight></codeline>
    </programlisting>
    <location file="/home/wtgee/Projects/Panoptes/POCS/panoptes/weather/AAGCloudSensor.py"/>
  </compounddef>
</doxygen>
