<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="test__ioptron_8py" kind="file">
    <compoundname>test_ioptron.py</compoundname>
    <innerclass refid="classtest__ioptron_1_1_test_i_optron" prot="public">test_ioptron::TestIOptron</innerclass>
    <innernamespace refid="namespacetest__ioptron">test_ioptron</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1" refid="namespacetest__ioptron" refkind="compound"><highlight class="keyword">import</highlight><highlight class="normal"><sp/>nose.tools</highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>nose.plugins.skip<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>Skip,<sp/>SkipTest</highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>nose.plugins.attrib<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>attr</highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>panoptes</highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/><ref refid="namespacepanoptes_1_1mount_1_1ioptron" kindref="compound">panoptes.mount.ioptron</ref><sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>Mount</highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/><ref refid="namespacepanoptes_1_1utils_1_1error" kindref="compound">panoptes.utils.error</ref><sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>error</highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>ephem</highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11" refid="classtest__ioptron_1_1_test_i_optron" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classtest__ioptron_1_1_test_i_optron" kindref="compound">TestIOptron</ref>():</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classtest__ioptron_1_1_test_i_optron_1aa9906f60d7d0b6b90a87d04e12eb3fac" kindref="member">__init__</ref>(self):<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classtest__ioptron_1_1_test_i_optron_1a39315066d0765b62728b729ed2b78a6f" kindref="member">good_config</ref><sp/>=<sp/>{</highlight><highlight class="stringliteral">&apos;model&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="stringliteral">&apos;ioptron&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;port&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="stringliteral">&apos;/dev/ttyUSB0&apos;</highlight><highlight class="normal">}</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classtest__ioptron_1_1_test_i_optron_1ae5c28c0c928c44c6562b04fde96f9dcf" kindref="member">site</ref><sp/>=<sp/>ephem.Observer()</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.site.lon<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;-155:34:34.3164&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.site.lat<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;19:32:09.3876&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classtest__ioptron_1_1_test_i_optron_1a3f1ddc93ea13e1436cc0a8d29d9eca87" kindref="member">connect_with_skip</ref>(self):</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="22"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>This<sp/>is<sp/>a<sp/>convenience<sp/>function<sp/>which<sp/>attempts<sp/>to<sp/>connect<sp/>and<sp/>raises<sp/>SkipTest<sp/>if<sp/>cannot</highlight></codeline>
<codeline lineno="23"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mount<sp/>=<sp/><ref refid="classpanoptes_1_1mount_1_1ioptron_1_1_mount" kindref="compound">Mount</ref>(config=self.<ref refid="classtest__ioptron_1_1_test_i_optron_1a39315066d0765b62728b729ed2b78a6f" kindref="member">good_config</ref>)</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>mount.connect():</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>SkipTest(</highlight><highlight class="stringliteral">&apos;mount.connect()<sp/>returned<sp/>false&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>SkipTest(</highlight><highlight class="stringliteral">&apos;Error<sp/>connecting<sp/>to<sp/>mount&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mount</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classtest__ioptron_1_1_test_i_optron_1a160c529b08c33244bb00c42ccff6f9e9" kindref="member">connect_with_site</ref>(self):</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="35"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>This<sp/>is<sp/>a<sp/>convenience<sp/>function<sp/>which<sp/>attempts<sp/>to<sp/>connect<sp/>and<sp/>raises<sp/>SkipTest<sp/>if<sp/>cannot</highlight></codeline>
<codeline lineno="36"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>and<sp/>also<sp/>sets<sp/>the<sp/>site<sp/>from<sp/>the<sp/>config</highlight></codeline>
<codeline lineno="37"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>site<sp/>=<sp/>ephem.Observer()</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mount<sp/>=<sp/><ref refid="classpanoptes_1_1mount_1_1ioptron_1_1_mount" kindref="compound">Mount</ref>(config=self.<ref refid="classtest__ioptron_1_1_test_i_optron_1a39315066d0765b62728b729ed2b78a6f" kindref="member">good_config</ref>,<sp/>site=site)</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mount.connect()</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>SkipTest(</highlight><highlight class="stringliteral">&apos;No<sp/>serial<sp/>connection<sp/>to<sp/>mount&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mount</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>BEGIN<sp/>TESTS<sp/>BELOW<sp/>##################################</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/>@attr(</highlight><highlight class="stringliteral">&apos;stable&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>@nose.tools.raises(AssertionError)</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classtest__ioptron_1_1_test_i_optron_1a470714df78319e31e1e395927e788ca9" kindref="member">test_000_no_config_no_commands</ref>(self):</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;<sp/>Mount<sp/>needs<sp/>a<sp/>config<sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mount<sp/>=<sp/><ref refid="classpanoptes_1_1mount_1_1ioptron_1_1_mount" kindref="compound">Mount</ref>()</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>@attr(</highlight><highlight class="stringliteral">&apos;stable&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>@nose.tools.raises(AssertionError)</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classtest__ioptron_1_1_test_i_optron_1af3d8c77d252f2fe911157251221ea6c9" kindref="member">test_001_config_bad_commands</ref>(self):</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;<sp/>Passes<sp/>in<sp/>a<sp/>default<sp/>config<sp/>but<sp/>blank<sp/>commands,<sp/>which<sp/>should<sp/>error<sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mount<sp/>=<sp/><ref refid="classpanoptes_1_1mount_1_1ioptron_1_1_mount" kindref="compound">Mount</ref>(config=self.<ref refid="classtest__ioptron_1_1_test_i_optron_1a39315066d0765b62728b729ed2b78a6f" kindref="member">good_config</ref>,<sp/>commands={</highlight><highlight class="stringliteral">&apos;foo&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="stringliteral">&apos;bar&apos;</highlight><highlight class="normal">})</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>@attr(</highlight><highlight class="stringliteral">&apos;stable&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classtest__ioptron_1_1_test_i_optron_1a501466d09db227e941e5829663370224" kindref="member">test_002_config_auto_commands</ref>(self):</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;<sp/>Passes<sp/>in<sp/>config<sp/>like<sp/>above,<sp/>but<sp/>no<sp/>commands,<sp/>so<sp/>they<sp/>should<sp/>read<sp/>from<sp/>defaults<sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mount<sp/>=<sp/><ref refid="classpanoptes_1_1mount_1_1ioptron_1_1_mount" kindref="compound">Mount</ref>(config=self.<ref refid="classtest__ioptron_1_1_test_i_optron_1a39315066d0765b62728b729ed2b78a6f" kindref="member">good_config</ref>)</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>@attr(</highlight><highlight class="stringliteral">&apos;stable&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classtest__ioptron_1_1_test_i_optron_1a74958531b7b0ceb536ed4a3e0e201074" kindref="member">test_003_default_settings</ref>(self):</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;<sp/>Passes<sp/>in<sp/>config<sp/>like<sp/>above,<sp/>but<sp/>no<sp/>commands,<sp/>so<sp/>they<sp/>should<sp/>read<sp/>from<sp/>defaults<sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mount<sp/>=<sp/><ref refid="classpanoptes_1_1mount_1_1ioptron_1_1_mount" kindref="compound">Mount</ref>(config=self.<ref refid="classtest__ioptron_1_1_test_i_optron_1a39315066d0765b62728b729ed2b78a6f" kindref="member">good_config</ref>)</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">assert</highlight><highlight class="normal"><sp/>mount.is_connected<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">assert</highlight><highlight class="normal"><sp/>mount.is_initialized<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>@attr(</highlight><highlight class="stringliteral">&apos;stable&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classtest__ioptron_1_1_test_i_optron_1a97efe8118a5482e65a779deb1a802c54" kindref="member">test_004_port_set</ref>(self):</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;<sp/>Passes<sp/>in<sp/>config<sp/>like<sp/>above,<sp/>but<sp/>no<sp/>commands,<sp/>so<sp/>they<sp/>should<sp/>read<sp/>from<sp/>defaults<sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mount<sp/>=<sp/><ref refid="classpanoptes_1_1mount_1_1ioptron_1_1_mount" kindref="compound">Mount</ref>(config=self.<ref refid="classtest__ioptron_1_1_test_i_optron_1a39315066d0765b62728b729ed2b78a6f" kindref="member">good_config</ref>)</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nose.tools.eq_(mount.port,<sp/></highlight><highlight class="stringliteral">&apos;/dev/ttyUSB0&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/>@attr(</highlight><highlight class="stringliteral">&apos;stable&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classtest__ioptron_1_1_test_i_optron_1a5859beb62edfdb8bf6a0b94ce628dc4e" kindref="member">test_005_connect_broken</ref>(self):</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;<sp/>Test<sp/>connecting<sp/>to<sp/>the<sp/>mount<sp/>after<sp/>setup<sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mount<sp/>=<sp/><ref refid="classpanoptes_1_1mount_1_1ioptron_1_1_mount" kindref="compound">Mount</ref>(config={</highlight><highlight class="stringliteral">&apos;model&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="stringliteral">&apos;ioptron&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;port&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="stringliteral">&apos;/dev/fooBar&apos;</highlight><highlight class="normal">})</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">assert</highlight><highlight class="normal"><sp/>mount.connect()<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>@attr(</highlight><highlight class="stringliteral">&apos;stable&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classtest__ioptron_1_1_test_i_optron_1a38708e3693a0f6c8aec19cd88d895b51" kindref="member">test_006_connect</ref>(self):</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;<sp/>Test<sp/>connecting<sp/>to<sp/>the<sp/>mount<sp/>after<sp/>setup.<sp/>If<sp/>we<sp/>are<sp/>not<sp/>connected,<sp/>we<sp/>skip<sp/>tests<sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mount<sp/>=<sp/>self.<ref refid="classtest__ioptron_1_1_test_i_optron_1a3f1ddc93ea13e1436cc0a8d29d9eca87" kindref="member">connect_with_skip</ref>()</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">assert</highlight><highlight class="normal"><sp/>mount.is_connected</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>@attr(</highlight><highlight class="stringliteral">&apos;stable&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classtest__ioptron_1_1_test_i_optron_1a6f237b1d2cb5883da72ac574573909a3" kindref="member">test_007_initialize_mount</ref>(self):</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;<sp/>Test<sp/>the<sp/>mounts<sp/>initialization<sp/>procedure<sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mount<sp/>=<sp/>self.<ref refid="classtest__ioptron_1_1_test_i_optron_1a3f1ddc93ea13e1436cc0a8d29d9eca87" kindref="member">connect_with_skip</ref>()</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mount.initialize_mount()</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">assert</highlight><highlight class="normal"><sp/>mount.is_initialized</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>@attr(</highlight><highlight class="stringliteral">&apos;stable&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>@nose.tools.raises(error.InvalidMountCommand)</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classtest__ioptron_1_1_test_i_optron_1ac01e96ffe26b0ac45707f231976b0412" kindref="member">test_008_bad_command</ref>(self):</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;<sp/>Give<sp/>a<sp/>bad<sp/>command<sp/>to<sp/>the<sp/>telescope<sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mount<sp/>=<sp/>self.<ref refid="classtest__ioptron_1_1_test_i_optron_1a3f1ddc93ea13e1436cc0a8d29d9eca87" kindref="member">connect_with_skip</ref>()</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mount._get_command(</highlight><highlight class="stringliteral">&apos;foobar&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/>@attr(</highlight><highlight class="stringliteral">&apos;stable&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classtest__ioptron_1_1_test_i_optron_1ad875b1585f527818c6ceeb70df397928" kindref="member">test_009_version_command</ref>(self):</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;<sp/>Tests<sp/>the<sp/>&apos;version&apos;<sp/>command<sp/>as<sp/>an<sp/>example<sp/>of<sp/>a<sp/>basic<sp/>command<sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mount<sp/>=<sp/>self.<ref refid="classtest__ioptron_1_1_test_i_optron_1a3f1ddc93ea13e1436cc0a8d29d9eca87" kindref="member">connect_with_skip</ref>()</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>correct_cmd<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;:V#&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cmd<sp/>=<sp/>mount._get_command(</highlight><highlight class="stringliteral">&apos;version&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nose.tools.eq_(correct_cmd,<sp/>cmd,</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;Received<sp/>command<sp/>does<sp/>not<sp/>match<sp/>expected&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/>@attr(</highlight><highlight class="stringliteral">&apos;stable&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/>@nose.tools.raises(NotImplementedError)</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classtest__ioptron_1_1_test_i_optron_1aa8bbc765195777eddcf4ebf81f086b92" kindref="member">test_010_echo</ref>(self):</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="124"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Test<sp/>an<sp/>echo<sp/>command</highlight></codeline>
<codeline lineno="125"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="126"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mount<sp/>=<sp/>self.<ref refid="classtest__ioptron_1_1_test_i_optron_1a3f1ddc93ea13e1436cc0a8d29d9eca87" kindref="member">connect_with_skip</ref>()</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mount.echo()</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/>@attr(</highlight><highlight class="stringliteral">&apos;stable&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classtest__ioptron_1_1_test_i_optron_1a35022a035632ff0454da168230a5e2e6" kindref="member">test_011_query_version</ref>(self):</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="133"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Query<sp/>the<sp/>mount<sp/>for<sp/>the<sp/>version</highlight></codeline>
<codeline lineno="134"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mount<sp/>=<sp/>self.<ref refid="classtest__ioptron_1_1_test_i_optron_1a3f1ddc93ea13e1436cc0a8d29d9eca87" kindref="member">connect_with_skip</ref>()</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mount.initialize_mount()</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>version<sp/>=<sp/>mount.serial_query(</highlight><highlight class="stringliteral">&apos;version&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>expected_version<sp/>=<sp/>mount.commands.get(</highlight><highlight class="stringliteral">&apos;version&apos;</highlight><highlight class="normal">).get(</highlight><highlight class="stringliteral">&apos;response&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Test<sp/>our<sp/>init<sp/>procedure<sp/>for<sp/>iOptron</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nose.tools.eq_(version,<sp/>expected_version)</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/>@attr(</highlight><highlight class="stringliteral">&apos;stable&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/>@nose.tools.raises(error.InvalidMountCommand)</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classtest__ioptron_1_1_test_i_optron_1a4a1a5b3daa84b94244b1603a3e3aa538" kindref="member">test_012_query_without_params</ref>(self):</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="149"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Try<sp/>to<sp/>send<sp/>a<sp/>command<sp/>that<sp/>requires<sp/>params<sp/>without<sp/>params</highlight></codeline>
<codeline lineno="150"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mount<sp/>=<sp/>self.<ref refid="classtest__ioptron_1_1_test_i_optron_1a3f1ddc93ea13e1436cc0a8d29d9eca87" kindref="member">connect_with_skip</ref>()</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mount.initialize_mount()</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mount.serial_query(</highlight><highlight class="stringliteral">&apos;set_local_date&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/>@attr(</highlight><highlight class="stringliteral">&apos;stable&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classtest__ioptron_1_1_test_i_optron_1adb4580a58ba1a318814cba885743658f" kindref="member">test_013_set_date</ref>(self):</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="159"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Where<sp/>the<sp/>mount<sp/>reports<sp/>itself<sp/>at<sp/>start</highlight></codeline>
<codeline lineno="160"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mount<sp/>=<sp/>self.<ref refid="classtest__ioptron_1_1_test_i_optron_1a3f1ddc93ea13e1436cc0a8d29d9eca87" kindref="member">connect_with_skip</ref>()</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mount.initialize_mount()</highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dt1<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;12:25:13&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>First<sp/>we<sp/>set<sp/>the<sp/>date<sp/>incorrectly</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mount.serial_query(</highlight><highlight class="stringliteral">&apos;set_local_date&apos;</highlight><highlight class="normal">,<sp/>dt1)</highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Then<sp/>check<sp/>what<sp/>we<sp/>got</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dt2<sp/>=<sp/>mount.serial_query(</highlight><highlight class="stringliteral">&apos;get_local_date&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Check<sp/>date<sp/>is<sp/>okay</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nose.tools.eq_(dt1,<sp/>dt2)</highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Reset<sp/>to<sp/>today</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>datetime<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>dt</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>now<sp/>=<sp/>dt.datetime.now()</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>today<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;{:02d}:{:02d}:{:02d}&apos;</highlight><highlight class="normal">.format(now.month,<sp/>now.day,<sp/>now.year-2000)</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mount.serial_query(</highlight><highlight class="stringliteral">&apos;set_local_date&apos;</highlight><highlight class="normal">,<sp/>today)</highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classtest__ioptron_1_1_test_i_optron_1a557e56934d706f05831f304fd63e45a8" kindref="member">test_014_setup_site</ref>(self):</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="184"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Set<sp/>up<sp/>the<sp/>mount<sp/>using<sp/>a<sp/>site</highlight></codeline>
<codeline lineno="185"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mount<sp/>=<sp/>self.<ref refid="classtest__ioptron_1_1_test_i_optron_1a3f1ddc93ea13e1436cc0a8d29d9eca87" kindref="member">connect_with_skip</ref>()</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mount.initialize_mount()</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mount.setup_site(self.<ref refid="classtest__ioptron_1_1_test_i_optron_1ae5c28c0c928c44c6562b04fde96f9dcf" kindref="member">site</ref>)</highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nose.tools.eq_(str(self.site.lon),<sp/>mount.serial_query(</highlight><highlight class="stringliteral">&apos;get_long&apos;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nose.tools.eq_(str(self.site.lat),<sp/>mount.serial_query(</highlight><highlight class="stringliteral">&apos;get_lat&apos;</highlight><highlight class="normal">))</highlight></codeline>
    </programlisting>
    <location file="/home/wtgee/Projects/Panoptes/POCS/panoptes/test/mount/test_ioptron.py"/>
  </compounddef>
</doxygen>
